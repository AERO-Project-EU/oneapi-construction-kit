; SPIR-V
; Version: 1.0
; Generator: Khronos LLVM/SPIR-V Translator; 14
; Bound: 155
; Schema: 0
               OpCapability Addresses
               OpCapability Linkage
               OpCapability Kernel
               OpCapability Int8
               OpExtension "SPV_KHR_no_integer_wrap_decoration"
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical32 OpenCL
               OpEntryPoint Kernel %9 "boscc_nested_loops1" %__spirv_BuiltInGlobalInvocationId
        %152 = OpString "kernel_arg_type.boscc_nested_loops1.int*,int,"
               OpSource OpenCL_C 102000
               OpName %__spirv_BuiltInGlobalInvocationId "__spirv_BuiltInGlobalInvocationId"
               OpDecorate %153 Alignment 4
        %153 = OpDecorationGroup
               OpDecorate %154 NoSignedWrap
        %154 = OpDecorationGroup
               OpDecorate %__spirv_BuiltInGlobalInvocationId BuiltIn GlobalInvocationId
               OpDecorate %__spirv_BuiltInGlobalInvocationId Constant
               OpDecorate %__spirv_BuiltInGlobalInvocationId LinkageAttributes "__spirv_BuiltInGlobalInvocationId" Import
               OpDecorate %45 Alignment 1
               OpGroupDecorate %153 %38 %40 %41 %42 %46 %47 %48 %49 %50 %51 %52 %53 %54 %55 %56 %57 %58
               OpGroupDecorate %154 %75 %80 %86 %88 %97 %108 %113 %121 %127 %133 %141 %143 %145 %147
       %uint = OpTypeInt 32 0
      %uchar = OpTypeInt 8 0
     %uint_0 = OpConstant %uint 0
     %uint_2 = OpConstant %uint 2
     %uint_5 = OpConstant %uint 5
    %uchar_0 = OpConstant %uchar 0
    %uchar_1 = OpConstant %uchar 1
     %uint_3 = OpConstant %uint 3
     %uint_1 = OpConstant %uint 1
     %uint_4 = OpConstant %uint 4
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
       %void = OpTypeVoid
%_ptr_CrossWorkgroup_uint = OpTypePointer CrossWorkgroup %uint
          %8 = OpTypeFunction %void %_ptr_CrossWorkgroup_uint %uint
%_ptr_Function__ptr_CrossWorkgroup_uint = OpTypePointer Function %_ptr_CrossWorkgroup_uint
%_ptr_Function_uint = OpTypePointer Function %uint
%_ptr_Function_uchar = OpTypePointer Function %uchar
       %bool = OpTypeBool
%__spirv_BuiltInGlobalInvocationId = OpVariable %_ptr_Input_v3uint Input
          %9 = OpFunction %void DontInline %8
         %10 = OpFunctionParameter %_ptr_CrossWorkgroup_uint
         %11 = OpFunctionParameter %uint
         %12 = OpLabel
         %38 = OpVariable %_ptr_Function__ptr_CrossWorkgroup_uint Function
         %40 = OpVariable %_ptr_Function_uint Function
         %41 = OpVariable %_ptr_Function_uint Function
         %42 = OpVariable %_ptr_Function_uint Function
         %45 = OpVariable %_ptr_Function_uchar Function
         %46 = OpVariable %_ptr_Function_uint Function
         %47 = OpVariable %_ptr_Function_uint Function
         %48 = OpVariable %_ptr_Function_uint Function
         %49 = OpVariable %_ptr_Function_uint Function
         %50 = OpVariable %_ptr_Function_uint Function
         %51 = OpVariable %_ptr_Function_uint Function
         %52 = OpVariable %_ptr_Function_uint Function
         %53 = OpVariable %_ptr_Function_uint Function
         %54 = OpVariable %_ptr_Function_uint Function
         %55 = OpVariable %_ptr_Function_uint Function
         %56 = OpVariable %_ptr_Function_uint Function
         %57 = OpVariable %_ptr_Function_uint Function
         %58 = OpVariable %_ptr_Function_uint Function
               OpStore %38 %10 Aligned 4
               OpStore %40 %11 Aligned 4
         %59 = OpLoad %v3uint %__spirv_BuiltInGlobalInvocationId
         %60 = OpCompositeExtract %uint %59 0
               OpStore %41 %60 Aligned 4
               OpStore %42 %uint_0 Aligned 4
         %62 = OpLoad %uint %41 Aligned 4
         %64 = OpSRem %uint %62 %uint_2
         %66 = OpIEqual %bool %64 %uint_0
               OpBranchConditional %66 %13 %36
         %13 = OpLabel
         %67 = OpLoad %uint %40 Aligned 4
         %69 = OpIEqual %bool %67 %uint_5
         %72 = OpSelect %uchar %69 %uchar_1 %uchar_0
               OpStore %45 %72 Aligned 1
         %73 = OpLoad %uint %40 Aligned 4
         %74 = OpLoad %uint %41 Aligned 4
         %75 = OpIMul %uint %73 %74
               OpStore %46 %75 Aligned 4
         %76 = OpLoad %uint %46 Aligned 4
         %77 = OpLoad %uint %40 Aligned 4
         %78 = OpSDiv %uint %76 %77
         %79 = OpLoad %uint %41 Aligned 4
         %80 = OpIAdd %uint %78 %79
               OpStore %47 %80 Aligned 4
         %81 = OpLoad %uint %47 Aligned 4
         %83 = OpShiftLeftLogical %uint %81 %uint_3
               OpStore %48 %83 Aligned 4
         %84 = OpLoad %uint %48 Aligned 4
         %85 = OpLoad %uint %46 Aligned 4
         %86 = OpIAdd %uint %84 %85
         %87 = OpLoad %uint %47 Aligned 4
         %88 = OpIAdd %uint %86 %87
               OpStore %49 %88 Aligned 4
               OpStore %50 %uint_0 Aligned 4
               OpBranch %14
         %14 = OpLabel
         %89 = OpLoad %uint %50 Aligned 4
         %90 = OpLoad %uint %40 Aligned 4
         %91 = OpSLessThan %bool %89 %90
               OpBranchConditional %91 %15 %35
         %15 = OpLabel
         %92 = OpLoad %uchar %45 Aligned 1
         %93 = OpBitwiseAnd %uchar %92 %uchar_1
         %94 = OpINotEqual %bool %93 %uchar_0
               OpBranchConditional %94 %16 %17
         %16 = OpLabel
         %95 = OpLoad %uint %49 Aligned 4
         %96 = OpLoad %uint %42 Aligned 4
         %97 = OpIAdd %uint %96 %95
               OpStore %42 %97 Aligned 4
               OpBranch %17
         %17 = OpLabel
         %98 = OpLoad %uint %40 Aligned 4
         %99 = OpSRem %uint %98 %uint_2
        %100 = OpINotEqual %bool %99 %uint_0
               OpBranchConditional %100 %18 %33
         %18 = OpLabel
        %101 = OpLoad %uint %40 Aligned 4
        %102 = OpSGreaterThan %bool %101 %uint_3
               OpBranchConditional %102 %19 %32
         %19 = OpLabel
               OpStore %51 %uint_0 Aligned 4
               OpBranch %20
         %20 = OpLabel
        %103 = OpLoad %uint %51 Aligned 4
        %104 = OpLoad %uint %40 Aligned 4
        %105 = OpSLessThan %bool %103 %104
               OpBranchConditional %105 %21 %31
         %21 = OpLabel
        %106 = OpLoad %uint %42 Aligned 4
        %108 = OpIAdd %uint %106 %uint_1
               OpStore %42 %108 Aligned 4
        %109 = OpLoad %uint %41 Aligned 4
        %110 = OpIEqual %bool %109 %uint_0
               OpBranchConditional %110 %22 %23
         %22 = OpLabel
        %111 = OpLoad %uint %46 Aligned 4
        %112 = OpLoad %uint %46 Aligned 4
        %113 = OpIMul %uint %111 %112
               OpStore %52 %113 Aligned 4
        %114 = OpLoad %uint %52 Aligned 4
        %115 = OpLoad %uint %40 Aligned 4
        %116 = OpSDiv %uint %114 %115
               OpStore %53 %116 Aligned 4
        %117 = OpLoad %uint %53 Aligned 4
        %118 = OpShiftLeftLogical %uint %117 %uint_3
               OpStore %54 %118 Aligned 4
        %119 = OpLoad %uint %54 Aligned 4
        %120 = OpLoad %uint %42 Aligned 4
        %121 = OpIAdd %uint %120 %119
               OpStore %42 %121 Aligned 4
               OpBranch %23
         %23 = OpLabel
               OpStore %55 %uint_0 Aligned 4
               OpBranch %24
         %24 = OpLabel
        %122 = OpLoad %uint %55 Aligned 4
        %123 = OpLoad %uint %40 Aligned 4
        %124 = OpSLessThan %bool %122 %123
               OpBranchConditional %124 %25 %29
         %25 = OpLabel
        %125 = OpLoad %uint %49 Aligned 4
        %126 = OpLoad %uint %42 Aligned 4
        %127 = OpIAdd %uint %126 %125
               OpStore %42 %127 Aligned 4
        %128 = OpLoad %uint %41 Aligned 4
        %130 = OpIEqual %bool %128 %uint_4
               OpBranchConditional %130 %26 %27
         %26 = OpLabel
        %131 = OpLoad %uint %46 Aligned 4
        %132 = OpLoad %uint %46 Aligned 4
        %133 = OpIMul %uint %131 %132
               OpStore %56 %133 Aligned 4
        %134 = OpLoad %uint %56 Aligned 4
        %135 = OpLoad %uint %40 Aligned 4
        %136 = OpSDiv %uint %134 %135
               OpStore %57 %136 Aligned 4
        %137 = OpLoad %uint %57 Aligned 4
        %138 = OpShiftLeftLogical %uint %137 %uint_3
               OpStore %58 %138 Aligned 4
        %139 = OpLoad %uint %58 Aligned 4
        %140 = OpLoad %uint %42 Aligned 4
        %141 = OpIAdd %uint %140 %139
               OpStore %42 %141 Aligned 4
               OpBranch %27
         %27 = OpLabel
               OpBranch %28
         %28 = OpLabel
        %142 = OpLoad %uint %55 Aligned 4
        %143 = OpIAdd %uint %142 %uint_1
               OpStore %55 %143 Aligned 4
               OpBranch %24
         %29 = OpLabel
               OpBranch %30
         %30 = OpLabel
        %144 = OpLoad %uint %51 Aligned 4
        %145 = OpIAdd %uint %144 %uint_1
               OpStore %51 %145 Aligned 4
               OpBranch %20
         %31 = OpLabel
               OpBranch %32
         %32 = OpLabel
               OpBranch %33
         %33 = OpLabel
               OpBranch %34
         %34 = OpLabel
        %146 = OpLoad %uint %50 Aligned 4
        %147 = OpIAdd %uint %146 %uint_1
               OpStore %50 %147 Aligned 4
               OpBranch %14
         %35 = OpLabel
               OpBranch %36
         %36 = OpLabel
        %148 = OpLoad %uint %42 Aligned 4
        %149 = OpLoad %_ptr_CrossWorkgroup_uint %38 Aligned 4
        %150 = OpLoad %uint %41 Aligned 4
        %151 = OpInBoundsPtrAccessChain %_ptr_CrossWorkgroup_uint %149 %150
               OpStore %151 %148 Aligned 4
               OpReturn
               OpFunctionEnd
