; SPIR-V
; Version: 1.0
; Generator: Khronos LLVM/SPIR-V Translator; 14
; Bound: 134
; Schema: 0
               OpCapability Addresses
               OpCapability Linkage
               OpCapability Kernel
               OpCapability Int16
               OpExtension "SPV_KHR_no_integer_wrap_decoration"
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical32 OpenCL
               OpEntryPoint Kernel %11 "convert_half_to_float_impl" %__spirv_BuiltInGlobalInvocationId
        %131 = OpString "kernel_arg_type.convert_half_to_float_impl.ushort*,uint*,"
               OpSource OpenCL_C 102000
               OpName %__spirv_BuiltInGlobalInvocationId "__spirv_BuiltInGlobalInvocationId"
               OpDecorate %132 Alignment 4
        %132 = OpDecorationGroup
               OpDecorate %133 NoSignedWrap
        %133 = OpDecorationGroup
               OpDecorate %__spirv_BuiltInGlobalInvocationId BuiltIn GlobalInvocationId
               OpDecorate %__spirv_BuiltInGlobalInvocationId Constant
               OpDecorate %__spirv_BuiltInGlobalInvocationId LinkageAttributes "__spirv_BuiltInGlobalInvocationId" Import
               OpDecorate %39 Alignment 2
               OpGroupDecorate %132 %33 %35 %37 %40 %41 %42 %43 %44 %45 %46 %47 %48
               OpGroupDecorate %133 %86 %99
       %uint = OpTypeInt 32 0
     %ushort = OpTypeInt 16 0
  %uint_1023 = OpConstant %uint 1023
 %uint_31744 = OpConstant %uint 31744
    %uint_10 = OpConstant %uint 10
 %uint_32768 = OpConstant %uint 32768
    %uint_15 = OpConstant %uint 15
     %uint_0 = OpConstant %uint 0
%uint_4294967295 = OpConstant %uint 4294967295
     %uint_1 = OpConstant %uint 1
  %uint_1024 = OpConstant %uint 1024
    %uint_13 = OpConstant %uint 13
   %uint_112 = OpConstant %uint 112
    %uint_31 = OpConstant %uint 31
   %uint_255 = OpConstant %uint 255
    %uint_23 = OpConstant %uint 23
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
       %void = OpTypeVoid
%_ptr_CrossWorkgroup_ushort = OpTypePointer CrossWorkgroup %ushort
%_ptr_CrossWorkgroup_uint = OpTypePointer CrossWorkgroup %uint
         %10 = OpTypeFunction %void %_ptr_CrossWorkgroup_ushort %_ptr_CrossWorkgroup_uint
%_ptr_Function__ptr_CrossWorkgroup_ushort = OpTypePointer Function %_ptr_CrossWorkgroup_ushort
%_ptr_Function__ptr_CrossWorkgroup_uint = OpTypePointer Function %_ptr_CrossWorkgroup_uint
%_ptr_Function_uint = OpTypePointer Function %uint
%_ptr_Function_ushort = OpTypePointer Function %ushort
       %bool = OpTypeBool
%__spirv_BuiltInGlobalInvocationId = OpVariable %_ptr_Input_v3uint Input
         %11 = OpFunction %void DontInline %10
         %12 = OpFunctionParameter %_ptr_CrossWorkgroup_ushort
         %13 = OpFunctionParameter %_ptr_CrossWorkgroup_uint
         %14 = OpLabel
         %33 = OpVariable %_ptr_Function__ptr_CrossWorkgroup_ushort Function
         %35 = OpVariable %_ptr_Function__ptr_CrossWorkgroup_uint Function
         %37 = OpVariable %_ptr_Function_uint Function
         %39 = OpVariable %_ptr_Function_ushort Function
         %40 = OpVariable %_ptr_Function_uint Function
         %41 = OpVariable %_ptr_Function_uint Function
         %42 = OpVariable %_ptr_Function_uint Function
         %43 = OpVariable %_ptr_Function_uint Function
         %44 = OpVariable %_ptr_Function_uint Function
         %45 = OpVariable %_ptr_Function_uint Function
         %46 = OpVariable %_ptr_Function_uint Function
         %47 = OpVariable %_ptr_Function_uint Function
         %48 = OpVariable %_ptr_Function_uint Function
               OpStore %33 %12 Aligned 4
               OpStore %35 %13 Aligned 4
         %49 = OpLoad %v3uint %__spirv_BuiltInGlobalInvocationId
         %50 = OpCompositeExtract %uint %49 0
               OpStore %37 %50 Aligned 4
         %51 = OpLoad %_ptr_CrossWorkgroup_ushort %33 Aligned 4
         %52 = OpLoad %uint %37 Aligned 4
         %53 = OpInBoundsPtrAccessChain %_ptr_CrossWorkgroup_ushort %51 %52
         %54 = OpLoad %ushort %53 Aligned 2
               OpStore %39 %54 Aligned 2
         %55 = OpLoad %ushort %39 Aligned 2
         %56 = OpUConvert %uint %55
         %58 = OpBitwiseAnd %uint %56 %uint_1023
               OpStore %40 %58 Aligned 4
         %59 = OpLoad %ushort %39 Aligned 2
         %60 = OpUConvert %uint %59
         %62 = OpBitwiseAnd %uint %60 %uint_31744
         %64 = OpShiftRightArithmetic %uint %62 %uint_10
               OpStore %41 %64 Aligned 4
         %65 = OpLoad %ushort %39 Aligned 2
         %66 = OpUConvert %uint %65
         %68 = OpBitwiseAnd %uint %66 %uint_32768
         %70 = OpShiftRightArithmetic %uint %68 %uint_15
               OpStore %42 %70 Aligned 4
         %71 = OpLoad %uint %41 Aligned 4
         %74 = OpIEqual %bool %71 %uint_0
               OpBranchConditional %74 %15 %17
         %15 = OpLabel
         %75 = OpLoad %uint %40 Aligned 4
         %76 = OpIEqual %bool %75 %uint_0
               OpBranchConditional %76 %16 %17
         %16 = OpLabel
               OpStore %44 %uint_0 Aligned 4
               OpStore %45 %uint_0 Aligned 4
         %77 = OpLoad %uint %42 Aligned 4
               OpStore %46 %77 Aligned 4
               OpBranch %31
         %17 = OpLabel
         %78 = OpLoad %uint %41 Aligned 4
         %79 = OpIEqual %bool %78 %uint_0
               OpBranchConditional %79 %18 %23
         %18 = OpLabel
         %80 = OpLoad %uint %40 Aligned 4
         %81 = OpINotEqual %bool %80 %uint_0
               OpBranchConditional %81 %19 %23
         %19 = OpLabel
               OpStore %47 %uint_4294967295 Aligned 4
         %83 = OpLoad %uint %40 Aligned 4
               OpStore %48 %83 Aligned 4
               OpBranch %20
         %20 = OpLabel
         %84 = OpLoad %uint %47 Aligned 4
         %86 = OpIAdd %uint %84 %uint_1
               OpStore %47 %86 Aligned 4
         %87 = OpLoad %uint %48 Aligned 4
         %88 = OpShiftLeftLogical %uint %87 %uint_1
               OpStore %48 %88 Aligned 4
               OpBranch %21
         %21 = OpLabel
         %89 = OpLoad %uint %48 Aligned 4
         %91 = OpBitwiseAnd %uint %89 %uint_1024
         %92 = OpIEqual %bool %91 %uint_0
               OpBranchConditional %92 %20 %22
         %22 = OpLabel
         %93 = OpLoad %uint %48 Aligned 4
         %94 = OpBitwiseAnd %uint %93 %uint_1023
         %96 = OpShiftLeftLogical %uint %94 %uint_13
               OpStore %44 %96 Aligned 4
         %97 = OpLoad %uint %47 Aligned 4
         %99 = OpISub %uint %uint_112 %97
               OpStore %45 %99 Aligned 4
        %100 = OpLoad %uint %42 Aligned 4
               OpStore %46 %100 Aligned 4
               OpBranch %30
         %23 = OpLabel
        %101 = OpLoad %uint %41 Aligned 4
        %103 = OpIEqual %bool %101 %uint_31
               OpBranchConditional %103 %24 %25
         %24 = OpLabel
        %104 = OpLoad %uint %40 Aligned 4
        %105 = OpIEqual %bool %104 %uint_0
               OpBranchConditional %105 %27 %25
         %25 = OpLabel
        %106 = OpLoad %uint %41 Aligned 4
        %107 = OpIEqual %bool %106 %uint_31
               OpBranchConditional %107 %26 %28
         %26 = OpLabel
        %108 = OpLoad %uint %40 Aligned 4
        %109 = OpINotEqual %bool %108 %uint_0
               OpBranchConditional %109 %27 %28
         %27 = OpLabel
        %110 = OpLoad %uint %40 Aligned 4
        %111 = OpShiftLeftLogical %uint %110 %uint_13
               OpStore %44 %111 Aligned 4
               OpStore %45 %uint_255 Aligned 4
        %113 = OpLoad %uint %42 Aligned 4
               OpStore %46 %113 Aligned 4
               OpBranch %29
         %28 = OpLabel
        %114 = OpLoad %uint %40 Aligned 4
        %115 = OpShiftLeftLogical %uint %114 %uint_13
               OpStore %44 %115 Aligned 4
        %116 = OpLoad %uint %41 Aligned 4
        %117 = OpIAdd %uint %uint_112 %116
               OpStore %45 %117 Aligned 4
        %118 = OpLoad %uint %42 Aligned 4
               OpStore %46 %118 Aligned 4
               OpBranch %29
         %29 = OpLabel
               OpBranch %30
         %30 = OpLabel
               OpBranch %31
         %31 = OpLabel
        %119 = OpLoad %uint %46 Aligned 4
        %120 = OpShiftLeftLogical %uint %119 %uint_31
        %121 = OpLoad %uint %45 Aligned 4
        %123 = OpShiftLeftLogical %uint %121 %uint_23
        %124 = OpBitwiseOr %uint %120 %123
        %125 = OpLoad %uint %44 Aligned 4
        %126 = OpBitwiseOr %uint %124 %125
               OpStore %43 %126 Aligned 4
        %127 = OpLoad %uint %43 Aligned 4
        %128 = OpLoad %_ptr_CrossWorkgroup_uint %35 Aligned 4
        %129 = OpLoad %uint %37 Aligned 4
        %130 = OpInBoundsPtrAccessChain %_ptr_CrossWorkgroup_uint %128 %129
               OpStore %130 %127 Aligned 4
               OpReturn
               OpFunctionEnd
