; SPIR-V
; Version: 1.0
; Generator: Khronos LLVM/SPIR-V Translator; 14
; Bound: 131
; Schema: 0
               OpCapability Addresses
               OpCapability Linkage
               OpCapability Kernel
               OpCapability Int64
               OpExtension "SPV_KHR_no_integer_wrap_decoration"
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical64 OpenCL
               OpEntryPoint Kernel %10 "partial_linearization11" %__spirv_BuiltInGlobalInvocationId
        %128 = OpString "kernel_arg_type.partial_linearization11.int*,int,"
               OpSource OpenCL_C 102000
               OpName %__spirv_BuiltInGlobalInvocationId "__spirv_BuiltInGlobalInvocationId"
               OpDecorate %129 Alignment 4
        %129 = OpDecorationGroup
               OpDecorate %130 NoSignedWrap
        %130 = OpDecorationGroup
               OpDecorate %__spirv_BuiltInGlobalInvocationId BuiltIn GlobalInvocationId
               OpDecorate %__spirv_BuiltInGlobalInvocationId Constant
               OpDecorate %__spirv_BuiltInGlobalInvocationId LinkageAttributes "__spirv_BuiltInGlobalInvocationId" Import
               OpDecorate %45 Alignment 8
               OpGroupDecorate %129 %47 %48 %49 %50 %51 %52
               OpGroupDecorate %130 %64 %68 %70 %76 %81 %83 %91 %93 %96 %98 %100 %102 %105 %110 %117 %119
      %ulong = OpTypeInt 64 0
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
     %uint_5 = OpConstant %uint 5
     %uint_2 = OpConstant %uint 2
     %uint_1 = OpConstant %uint 1
     %uint_6 = OpConstant %uint 6
    %uint_10 = OpConstant %uint 10
    %uint_20 = OpConstant %uint 20
     %uint_3 = OpConstant %uint 3
     %uint_4 = OpConstant %uint 4
    %v3ulong = OpTypeVector %ulong 3
%_ptr_Input_v3ulong = OpTypePointer Input %v3ulong
       %void = OpTypeVoid
%_ptr_CrossWorkgroup_uint = OpTypePointer CrossWorkgroup %uint
          %9 = OpTypeFunction %void %_ptr_CrossWorkgroup_uint %uint
%_ptr_Function__ptr_CrossWorkgroup_uint = OpTypePointer Function %_ptr_CrossWorkgroup_uint
%_ptr_Function_uint = OpTypePointer Function %uint
       %bool = OpTypeBool
%__spirv_BuiltInGlobalInvocationId = OpVariable %_ptr_Input_v3ulong Input
         %10 = OpFunction %void DontInline %9
         %11 = OpFunctionParameter %_ptr_CrossWorkgroup_uint
         %12 = OpFunctionParameter %uint
         %13 = OpLabel
         %45 = OpVariable %_ptr_Function__ptr_CrossWorkgroup_uint Function
         %47 = OpVariable %_ptr_Function_uint Function
         %48 = OpVariable %_ptr_Function_uint Function
         %49 = OpVariable %_ptr_Function_uint Function
         %50 = OpVariable %_ptr_Function_uint Function
         %51 = OpVariable %_ptr_Function_uint Function
         %52 = OpVariable %_ptr_Function_uint Function
               OpStore %45 %11 Aligned 8
               OpStore %47 %12 Aligned 4
         %53 = OpLoad %v3ulong %__spirv_BuiltInGlobalInvocationId
         %54 = OpCompositeExtract %ulong %53 0
         %55 = OpUConvert %uint %54
               OpStore %48 %55 Aligned 4
               OpStore %49 %uint_0 Aligned 4
               OpStore %50 %uint_0 Aligned 4
               OpBranch %14
         %14 = OpLabel
               OpBranch %15
         %15 = OpLabel
         %57 = OpLoad %uint %47 Aligned 4
         %60 = OpSGreaterThan %bool %57 %uint_5
               OpBranchConditional %60 %16 %23
         %16 = OpLabel
               OpStore %51 %uint_0 Aligned 4
               OpBranch %17
         %17 = OpLabel
         %61 = OpLoad %uint %51 Aligned 4
         %62 = OpLoad %uint %47 Aligned 4
         %64 = OpIMul %uint %62 %uint_2
         %65 = OpSLessThan %bool %61 %64
               OpBranchConditional %65 %18 %20
         %18 = OpLabel
         %66 = OpLoad %uint %49 Aligned 4
         %68 = OpIAdd %uint %66 %uint_1
               OpStore %49 %68 Aligned 4
               OpBranch %19
         %19 = OpLabel
         %69 = OpLoad %uint %51 Aligned 4
         %70 = OpIAdd %uint %69 %uint_1
               OpStore %51 %70 Aligned 4
               OpBranch %17
         %20 = OpLabel
         %71 = OpLoad %uint %47 Aligned 4
         %73 = OpIEqual %bool %71 %uint_6
               OpBranchConditional %73 %21 %22
         %21 = OpLabel
               OpBranch %42
         %22 = OpLabel
               OpBranch %28
         %23 = OpLabel
         %74 = OpLoad %uint %49 Aligned 4
         %75 = OpLoad %uint %48 Aligned 4
         %76 = OpIAdd %uint %74 %75
         %77 = OpLoad %uint %47 Aligned 4
         %78 = OpSGreaterThanEqual %bool %76 %77
               OpBranchConditional %78 %24 %27
         %24 = OpLabel
         %79 = OpLoad %uint %47 Aligned 4
         %80 = OpLoad %uint %47 Aligned 4
         %81 = OpIMul %uint %79 %80
         %82 = OpLoad %uint %49 Aligned 4
         %83 = OpIAdd %uint %81 %82
         %84 = OpLoad %uint %49 Aligned 4
         %85 = OpSDiv %uint %84 %83
               OpStore %49 %85 Aligned 4
         %86 = OpLoad %uint %49 Aligned 4
         %88 = OpSLessThanEqual %bool %86 %uint_10
               OpBranchConditional %88 %25 %26
         %25 = OpLabel
               OpBranch %33
         %26 = OpLabel
               OpBranch %31
         %27 = OpLabel
               OpBranch %28
         %28 = OpLabel
         %89 = OpLoad %uint %47 Aligned 4
         %90 = OpLoad %uint %49 Aligned 4
         %91 = OpIMul %uint %90 %89
               OpStore %49 %91 Aligned 4
         %92 = OpLoad %uint %50 Aligned 4
         %93 = OpIAdd %uint %92 %uint_1
               OpStore %50 %93 Aligned 4
         %94 = OpSGreaterThan %bool %92 %uint_2
               OpBranchConditional %94 %29 %30
         %29 = OpLabel
               OpBranch %32
         %30 = OpLabel
               OpBranch %31
         %31 = OpLabel
         %95 = OpLoad %uint %49 Aligned 4
         %96 = OpIAdd %uint %95 %uint_1
               OpStore %49 %96 Aligned 4
               OpBranch %15
         %32 = OpLabel
         %97 = OpLoad %uint %47 Aligned 4
         %98 = OpIMul %uint %97 %uint_2
        %100 = OpIAdd %uint %98 %uint_20
        %101 = OpLoad %uint %49 Aligned 4
        %102 = OpIAdd %uint %101 %100
               OpStore %49 %102 Aligned 4
               OpBranch %34
         %33 = OpLabel
        %103 = OpLoad %uint %47 Aligned 4
        %104 = OpLoad %uint %49 Aligned 4
        %105 = OpIMul %uint %104 %103
               OpStore %49 %105 Aligned 4
               OpBranch %34
         %34 = OpLabel
        %106 = OpLoad %uint %50 Aligned 4
        %108 = OpSGreaterThan %bool %106 %uint_3
               OpBranchConditional %108 %35 %36
         %35 = OpLabel
        %109 = OpLoad %uint %49 Aligned 4
        %110 = OpIAdd %uint %109 %uint_1
               OpStore %49 %110 Aligned 4
               OpBranch %37
         %36 = OpLabel
               OpBranch %14
         %37 = OpLabel
               OpStore %52 %uint_0 Aligned 4
               OpBranch %38
         %38 = OpLabel
        %111 = OpLoad %uint %52 Aligned 4
        %112 = OpLoad %uint %47 Aligned 4
        %114 = OpSDiv %uint %112 %uint_4
        %115 = OpSLessThan %bool %111 %114
               OpBranchConditional %115 %39 %41
         %39 = OpLabel
        %116 = OpLoad %uint %49 Aligned 4
        %117 = OpIAdd %uint %116 %uint_1
               OpStore %49 %117 Aligned 4
               OpBranch %40
         %40 = OpLabel
        %118 = OpLoad %uint %52 Aligned 4
        %119 = OpIAdd %uint %118 %uint_1
               OpStore %52 %119 Aligned 4
               OpBranch %38
         %41 = OpLabel
               OpBranch %43
         %42 = OpLabel
        %120 = OpLoad %uint %47 Aligned 4
        %121 = OpLoad %uint %49 Aligned 4
        %122 = OpSDiv %uint %121 %120
               OpStore %49 %122 Aligned 4
               OpBranch %43
         %43 = OpLabel
        %123 = OpLoad %uint %49 Aligned 4
        %124 = OpLoad %_ptr_CrossWorkgroup_uint %45 Aligned 8
        %125 = OpLoad %uint %48 Aligned 4
        %126 = OpSConvert %ulong %125
        %127 = OpInBoundsPtrAccessChain %_ptr_CrossWorkgroup_uint %124 %126
               OpStore %127 %123 Aligned 4
               OpReturn
               OpFunctionEnd
