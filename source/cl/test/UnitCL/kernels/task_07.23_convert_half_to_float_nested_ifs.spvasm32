; SPIR-V
; Version: 1.0
; Generator: Khronos LLVM/SPIR-V Translator; 14
; Bound: 119
; Schema: 0
               OpCapability Addresses
               OpCapability Linkage
               OpCapability Kernel
               OpCapability Int16
               OpExtension "SPV_KHR_no_integer_wrap_decoration"
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical32 OpenCL
               OpEntryPoint Kernel %11 "convert_half_to_float_nested_ifs" %__spirv_BuiltInGlobalInvocationId
        %116 = OpString "kernel_arg_type.convert_half_to_float_nested_ifs.ushort*,uint*,"
               OpSource OpenCL_C 102000
               OpName %__spirv_BuiltInGlobalInvocationId "__spirv_BuiltInGlobalInvocationId"
               OpDecorate %117 Alignment 4
        %117 = OpDecorationGroup
               OpDecorate %118 NoSignedWrap
        %118 = OpDecorationGroup
               OpDecorate %__spirv_BuiltInGlobalInvocationId BuiltIn GlobalInvocationId
               OpDecorate %__spirv_BuiltInGlobalInvocationId Constant
               OpDecorate %__spirv_BuiltInGlobalInvocationId LinkageAttributes "__spirv_BuiltInGlobalInvocationId" Import
               OpDecorate %34 Alignment 2
               OpGroupDecorate %117 %28 %30 %32 %35 %36 %37 %38 %39 %40 %41 %42 %43
               OpGroupDecorate %118 %77 %90
       %uint = OpTypeInt 32 0
     %ushort = OpTypeInt 16 0
  %uint_1023 = OpConstant %uint 1023
 %uint_31744 = OpConstant %uint 31744
    %uint_10 = OpConstant %uint 10
 %uint_32768 = OpConstant %uint 32768
    %uint_15 = OpConstant %uint 15
     %uint_0 = OpConstant %uint 0
%uint_4294967295 = OpConstant %uint 4294967295
     %uint_1 = OpConstant %uint 1
  %uint_1024 = OpConstant %uint 1024
    %uint_13 = OpConstant %uint 13
   %uint_112 = OpConstant %uint 112
    %uint_31 = OpConstant %uint 31
   %uint_255 = OpConstant %uint 255
    %uint_23 = OpConstant %uint 23
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
       %void = OpTypeVoid
%_ptr_CrossWorkgroup_ushort = OpTypePointer CrossWorkgroup %ushort
%_ptr_CrossWorkgroup_uint = OpTypePointer CrossWorkgroup %uint
         %10 = OpTypeFunction %void %_ptr_CrossWorkgroup_ushort %_ptr_CrossWorkgroup_uint
%_ptr_Function__ptr_CrossWorkgroup_ushort = OpTypePointer Function %_ptr_CrossWorkgroup_ushort
%_ptr_Function__ptr_CrossWorkgroup_uint = OpTypePointer Function %_ptr_CrossWorkgroup_uint
%_ptr_Function_uint = OpTypePointer Function %uint
%_ptr_Function_ushort = OpTypePointer Function %ushort
       %bool = OpTypeBool
%__spirv_BuiltInGlobalInvocationId = OpVariable %_ptr_Input_v3uint Input
         %11 = OpFunction %void DontInline %10
         %12 = OpFunctionParameter %_ptr_CrossWorkgroup_ushort
         %13 = OpFunctionParameter %_ptr_CrossWorkgroup_uint
         %14 = OpLabel
         %28 = OpVariable %_ptr_Function__ptr_CrossWorkgroup_ushort Function
         %30 = OpVariable %_ptr_Function__ptr_CrossWorkgroup_uint Function
         %32 = OpVariable %_ptr_Function_uint Function
         %34 = OpVariable %_ptr_Function_ushort Function
         %35 = OpVariable %_ptr_Function_uint Function
         %36 = OpVariable %_ptr_Function_uint Function
         %37 = OpVariable %_ptr_Function_uint Function
         %38 = OpVariable %_ptr_Function_uint Function
         %39 = OpVariable %_ptr_Function_uint Function
         %40 = OpVariable %_ptr_Function_uint Function
         %41 = OpVariable %_ptr_Function_uint Function
         %42 = OpVariable %_ptr_Function_uint Function
         %43 = OpVariable %_ptr_Function_uint Function
               OpStore %28 %12 Aligned 4
               OpStore %30 %13 Aligned 4
         %44 = OpLoad %v3uint %__spirv_BuiltInGlobalInvocationId
         %45 = OpCompositeExtract %uint %44 0
               OpStore %32 %45 Aligned 4
         %46 = OpLoad %_ptr_CrossWorkgroup_ushort %28 Aligned 4
         %47 = OpLoad %uint %32 Aligned 4
         %48 = OpInBoundsPtrAccessChain %_ptr_CrossWorkgroup_ushort %46 %47
         %49 = OpLoad %ushort %48 Aligned 2
               OpStore %34 %49 Aligned 2
         %50 = OpLoad %ushort %34 Aligned 2
         %51 = OpUConvert %uint %50
         %53 = OpBitwiseAnd %uint %51 %uint_1023
               OpStore %35 %53 Aligned 4
         %54 = OpLoad %ushort %34 Aligned 2
         %55 = OpUConvert %uint %54
         %57 = OpBitwiseAnd %uint %55 %uint_31744
         %59 = OpShiftRightArithmetic %uint %57 %uint_10
               OpStore %36 %59 Aligned 4
         %60 = OpLoad %ushort %34 Aligned 2
         %61 = OpUConvert %uint %60
         %63 = OpBitwiseAnd %uint %61 %uint_32768
         %65 = OpShiftRightArithmetic %uint %63 %uint_15
               OpStore %37 %65 Aligned 4
         %66 = OpLoad %uint %36 Aligned 4
         %69 = OpIEqual %bool %66 %uint_0
               OpBranchConditional %69 %15 %22
         %15 = OpLabel
         %70 = OpLoad %uint %35 Aligned 4
         %71 = OpIEqual %bool %70 %uint_0
               OpBranchConditional %71 %16 %17
         %16 = OpLabel
               OpStore %39 %uint_0 Aligned 4
               OpStore %40 %uint_0 Aligned 4
         %72 = OpLoad %uint %37 Aligned 4
               OpStore %41 %72 Aligned 4
               OpBranch %21
         %17 = OpLabel
               OpStore %42 %uint_4294967295 Aligned 4
         %74 = OpLoad %uint %35 Aligned 4
               OpStore %43 %74 Aligned 4
               OpBranch %18
         %18 = OpLabel
         %75 = OpLoad %uint %42 Aligned 4
         %77 = OpIAdd %uint %75 %uint_1
               OpStore %42 %77 Aligned 4
         %78 = OpLoad %uint %43 Aligned 4
         %79 = OpShiftLeftLogical %uint %78 %uint_1
               OpStore %43 %79 Aligned 4
               OpBranch %19
         %19 = OpLabel
         %80 = OpLoad %uint %43 Aligned 4
         %82 = OpBitwiseAnd %uint %80 %uint_1024
         %83 = OpIEqual %bool %82 %uint_0
               OpBranchConditional %83 %18 %20
         %20 = OpLabel
         %84 = OpLoad %uint %43 Aligned 4
         %85 = OpBitwiseAnd %uint %84 %uint_1023
         %87 = OpShiftLeftLogical %uint %85 %uint_13
               OpStore %39 %87 Aligned 4
         %88 = OpLoad %uint %42 Aligned 4
         %90 = OpISub %uint %uint_112 %88
               OpStore %40 %90 Aligned 4
         %91 = OpLoad %uint %37 Aligned 4
               OpStore %41 %91 Aligned 4
               OpBranch %21
         %21 = OpLabel
               OpBranch %26
         %22 = OpLabel
         %92 = OpLoad %uint %36 Aligned 4
         %94 = OpIEqual %bool %92 %uint_31
               OpBranchConditional %94 %23 %24
         %23 = OpLabel
         %95 = OpLoad %uint %35 Aligned 4
         %96 = OpShiftLeftLogical %uint %95 %uint_13
               OpStore %39 %96 Aligned 4
               OpStore %40 %uint_255 Aligned 4
         %98 = OpLoad %uint %37 Aligned 4
               OpStore %41 %98 Aligned 4
               OpBranch %25
         %24 = OpLabel
         %99 = OpLoad %uint %35 Aligned 4
        %100 = OpShiftLeftLogical %uint %99 %uint_13
               OpStore %39 %100 Aligned 4
        %101 = OpLoad %uint %36 Aligned 4
        %102 = OpIAdd %uint %uint_112 %101
               OpStore %40 %102 Aligned 4
        %103 = OpLoad %uint %37 Aligned 4
               OpStore %41 %103 Aligned 4
               OpBranch %25
         %25 = OpLabel
               OpBranch %26
         %26 = OpLabel
        %104 = OpLoad %uint %41 Aligned 4
        %105 = OpShiftLeftLogical %uint %104 %uint_31
        %106 = OpLoad %uint %40 Aligned 4
        %108 = OpShiftLeftLogical %uint %106 %uint_23
        %109 = OpBitwiseOr %uint %105 %108
        %110 = OpLoad %uint %39 Aligned 4
        %111 = OpBitwiseOr %uint %109 %110
               OpStore %38 %111 Aligned 4
        %112 = OpLoad %uint %38 Aligned 4
        %113 = OpLoad %_ptr_CrossWorkgroup_uint %30 Aligned 4
        %114 = OpLoad %uint %32 Aligned 4
        %115 = OpInBoundsPtrAccessChain %_ptr_CrossWorkgroup_uint %113 %114
               OpStore %115 %112 Aligned 4
               OpReturn
               OpFunctionEnd
