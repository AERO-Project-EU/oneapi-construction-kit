; SPIR-V
; Version: 1.0
; Generator: Khronos LLVM/SPIR-V Translator; 14
; Bound: 95
; Schema: 0
               OpCapability Addresses
               OpCapability Linkage
               OpCapability Kernel
               OpCapability Int16
               OpExtension "SPV_KHR_no_integer_wrap_decoration"
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical32 OpenCL
               OpEntryPoint Kernel %9 "boscc_sese_backdoor" %__spirv_BuiltInGlobalInvocationId
         %91 = OpString "kernel_arg_type.boscc_sese_backdoor.uint*,"
               OpSource OpenCL_C 102000
               OpName %__spirv_BuiltInGlobalInvocationId "__spirv_BuiltInGlobalInvocationId"
               OpDecorate %92 Alignment 2
         %92 = OpDecorationGroup
               OpDecorate %93 Alignment 4
         %93 = OpDecorationGroup
               OpDecorate %94 NoSignedWrap
         %94 = OpDecorationGroup
               OpDecorate %__spirv_BuiltInGlobalInvocationId BuiltIn GlobalInvocationId
               OpDecorate %__spirv_BuiltInGlobalInvocationId Constant
               OpDecorate %__spirv_BuiltInGlobalInvocationId LinkageAttributes "__spirv_BuiltInGlobalInvocationId" Import
               OpGroupDecorate %92 %29 %30
               OpGroupDecorate %93 %22 %24 %25 %26 %31
               OpGroupDecorate %94 %47 %55
       %uint = OpTypeInt 32 0
     %ushort = OpTypeInt 16 0
     %uint_8 = OpConstant %uint 8
 %uint_18309 = OpConstant %uint 18309
 %uint_33367 = OpConstant %uint 33367
  %uint_4716 = OpConstant %uint 4716
  %uint_4945 = OpConstant %uint 4945
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
     %uint_2 = OpConstant %uint 2
    %uint_16 = OpConstant %uint 16
    %uint_32 = OpConstant %uint 32
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
       %void = OpTypeVoid
%_ptr_CrossWorkgroup_uint = OpTypePointer CrossWorkgroup %uint
          %8 = OpTypeFunction %void %_ptr_CrossWorkgroup_uint
%_ptr_Function__ptr_CrossWorkgroup_uint = OpTypePointer Function %_ptr_CrossWorkgroup_uint
%_ptr_Function_uint = OpTypePointer Function %uint
%_ptr_Function_ushort = OpTypePointer Function %ushort
       %bool = OpTypeBool
%__spirv_BuiltInGlobalInvocationId = OpVariable %_ptr_Input_v3uint Input
          %9 = OpFunction %void DontInline %8
         %10 = OpFunctionParameter %_ptr_CrossWorkgroup_uint
         %11 = OpLabel
         %22 = OpVariable %_ptr_Function__ptr_CrossWorkgroup_uint Function
         %24 = OpVariable %_ptr_Function_uint Function
         %25 = OpVariable %_ptr_Function_uint Function
         %26 = OpVariable %_ptr_Function_uint Function
         %29 = OpVariable %_ptr_Function_ushort Function
         %30 = OpVariable %_ptr_Function_ushort Function
         %31 = OpVariable %_ptr_Function_uint Function
               OpStore %22 %10 Aligned 4
         %32 = OpLoad %v3uint %__spirv_BuiltInGlobalInvocationId
         %33 = OpCompositeExtract %uint %32 0
               OpStore %24 %33 Aligned 4
         %34 = OpLoad %v3uint %__spirv_BuiltInGlobalInvocationId
         %35 = OpCompositeExtract %uint %34 1
               OpStore %25 %35 Aligned 4
         %36 = OpLoad %uint %25 Aligned 4
         %38 = OpShiftLeftLogical %uint %36 %uint_8
         %39 = OpLoad %uint %24 Aligned 4
         %40 = OpBitwiseOr %uint %38 %39
               OpStore %26 %40 Aligned 4
         %41 = OpLoad %uint %24 Aligned 4
         %42 = OpUConvert %ushort %41
         %43 = OpUConvert %uint %42
         %45 = OpBitwiseXor %uint %43 %uint_18309
         %47 = OpIMul %uint %45 %uint_33367
         %48 = OpUConvert %ushort %47
               OpStore %29 %48 Aligned 2
         %49 = OpLoad %uint %25 Aligned 4
         %50 = OpUConvert %ushort %49
         %51 = OpUConvert %uint %50
         %53 = OpBitwiseXor %uint %51 %uint_4716
         %55 = OpIMul %uint %53 %uint_4945
         %56 = OpUConvert %ushort %55
               OpStore %30 %56 Aligned 2
               OpStore %31 %uint_0 Aligned 4
         %58 = OpLoad %ushort %30 Aligned 2
         %59 = OpUConvert %uint %58
         %61 = OpBitwiseAnd %uint %59 %uint_1
         %63 = OpINotEqual %bool %61 %uint_0
               OpBranchConditional %63 %12 %15
         %12 = OpLabel
         %64 = OpLoad %uint %31 Aligned 4
         %65 = OpBitwiseOr %uint %64 %uint_1
               OpStore %31 %65 Aligned 4
         %66 = OpLoad %ushort %30 Aligned 2
         %67 = OpUConvert %uint %66
         %69 = OpBitwiseAnd %uint %67 %uint_2
         %70 = OpINotEqual %bool %69 %uint_0
               OpBranchConditional %70 %13 %14
         %13 = OpLabel
         %71 = OpLoad %ushort %30 Aligned 2
         %72 = OpUConvert %uint %71
         %73 = OpLoad %uint %31 Aligned 4
         %74 = OpBitwiseXor %uint %73 %72
               OpStore %31 %74 Aligned 4
               OpBranch %14
         %14 = OpLabel
               OpBranch %19
         %15 = OpLabel
         %75 = OpLoad %uint %31 Aligned 4
         %76 = OpBitwiseOr %uint %75 %uint_8
               OpStore %31 %76 Aligned 4
         %77 = OpLoad %ushort %29 Aligned 2
         %78 = OpUConvert %uint %77
         %79 = OpBitwiseAnd %uint %78 %uint_1
         %80 = OpINotEqual %bool %79 %uint_0
               OpBranchConditional %80 %16 %17
         %16 = OpLabel
         %81 = OpLoad %uint %31 Aligned 4
         %83 = OpBitwiseOr %uint %81 %uint_16
               OpStore %31 %83 Aligned 4
               OpBranch %20
         %17 = OpLabel
               OpBranch %18
         %18 = OpLabel
               OpBranch %19
         %19 = OpLabel
         %84 = OpLoad %uint %31 Aligned 4
         %86 = OpBitwiseOr %uint %84 %uint_32
               OpStore %31 %86 Aligned 4
               OpBranch %20
         %20 = OpLabel
         %87 = OpLoad %uint %31 Aligned 4
         %88 = OpLoad %_ptr_CrossWorkgroup_uint %22 Aligned 4
         %89 = OpLoad %uint %26 Aligned 4
         %90 = OpInBoundsPtrAccessChain %_ptr_CrossWorkgroup_uint %88 %89
               OpStore %90 %87 Aligned 4
               OpReturn
               OpFunctionEnd
