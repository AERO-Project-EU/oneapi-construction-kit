; SPIR-V
; Version: 1.0
; Generator: Khronos LLVM/SPIR-V Translator; 14
; Bound: 80
; Schema: 0
               OpCapability Addresses
               OpCapability Linkage
               OpCapability Kernel
               OpCapability Int64
               OpExtension "SPV_KHR_no_integer_wrap_decoration"
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical64 OpenCL
               OpEntryPoint Kernel %10 "varying_load" %__spirv_BuiltInGlobalInvocationId
         %76 = OpString "kernel_arg_type.varying_load.int*,int,int*,"
               OpSource OpenCL_C 102000
               OpName %__spirv_BuiltInGlobalInvocationId "__spirv_BuiltInGlobalInvocationId"
               OpDecorate %77 Alignment 4
         %77 = OpDecorationGroup
               OpDecorate %78 Alignment 8
         %78 = OpDecorationGroup
               OpDecorate %79 NoSignedWrap
         %79 = OpDecorationGroup
               OpDecorate %__spirv_BuiltInGlobalInvocationId BuiltIn GlobalInvocationId
               OpDecorate %__spirv_BuiltInGlobalInvocationId Constant
               OpDecorate %__spirv_BuiltInGlobalInvocationId LinkageAttributes "__spirv_BuiltInGlobalInvocationId" Import
               OpGroupDecorate %77 %24 %26 %27 %28 %29 %30 %31
               OpGroupDecorate %78 %22 %25
               OpGroupDecorate %79 %46 %51 %57 %67 %69
      %ulong = OpTypeInt 64 0
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
    %uint_10 = OpConstant %uint 10
     %uint_3 = OpConstant %uint 3
     %uint_2 = OpConstant %uint 2
    %v3ulong = OpTypeVector %ulong 3
%_ptr_Input_v3ulong = OpTypePointer Input %v3ulong
       %void = OpTypeVoid
%_ptr_CrossWorkgroup_uint = OpTypePointer CrossWorkgroup %uint
          %9 = OpTypeFunction %void %_ptr_CrossWorkgroup_uint %uint %_ptr_CrossWorkgroup_uint
%_ptr_Function__ptr_CrossWorkgroup_uint = OpTypePointer Function %_ptr_CrossWorkgroup_uint
%_ptr_Function_uint = OpTypePointer Function %uint
       %bool = OpTypeBool
%__spirv_BuiltInGlobalInvocationId = OpVariable %_ptr_Input_v3ulong Input
         %10 = OpFunction %void DontInline %9
         %11 = OpFunctionParameter %_ptr_CrossWorkgroup_uint
         %12 = OpFunctionParameter %uint
         %13 = OpFunctionParameter %_ptr_CrossWorkgroup_uint
         %14 = OpLabel
         %22 = OpVariable %_ptr_Function__ptr_CrossWorkgroup_uint Function
         %24 = OpVariable %_ptr_Function_uint Function
         %25 = OpVariable %_ptr_Function__ptr_CrossWorkgroup_uint Function
         %26 = OpVariable %_ptr_Function_uint Function
         %27 = OpVariable %_ptr_Function_uint Function
         %28 = OpVariable %_ptr_Function_uint Function
         %29 = OpVariable %_ptr_Function_uint Function
         %30 = OpVariable %_ptr_Function_uint Function
         %31 = OpVariable %_ptr_Function_uint Function
               OpStore %22 %11 Aligned 8
               OpStore %24 %12 Aligned 4
               OpStore %25 %13 Aligned 8
         %32 = OpLoad %v3ulong %__spirv_BuiltInGlobalInvocationId
         %33 = OpCompositeExtract %ulong %32 0
         %34 = OpUConvert %uint %33
               OpStore %26 %34 Aligned 4
               OpStore %27 %uint_0 Aligned 4
         %36 = OpLoad %uint %26 Aligned 4
         %39 = OpSLessThanEqual %bool %36 %uint_10
               OpBranchConditional %39 %15 %20
         %15 = OpLabel
         %40 = OpLoad %uint %24 Aligned 4
               OpStore %28 %40 Aligned 4
         %41 = OpLoad %_ptr_CrossWorkgroup_uint %25 Aligned 8
         %42 = OpLoad %uint %41 Aligned 4
         %43 = OpIEqual %bool %42 %uint_0
               OpBranchConditional %43 %16 %17
         %16 = OpLabel
         %44 = OpLoad %uint %24 Aligned 4
         %45 = OpLoad %uint %26 Aligned 4
         %46 = OpIMul %uint %44 %45
               OpStore %29 %46 Aligned 4
         %47 = OpLoad %uint %29 Aligned 4
         %48 = OpLoad %uint %24 Aligned 4
         %49 = OpSDiv %uint %47 %48
         %50 = OpLoad %uint %26 Aligned 4
         %51 = OpIAdd %uint %49 %50
               OpStore %30 %51 Aligned 4
         %52 = OpLoad %uint %30 Aligned 4
         %54 = OpShiftLeftLogical %uint %52 %uint_3
               OpStore %31 %54 Aligned 4
         %55 = OpLoad %uint %31 Aligned 4
         %56 = OpLoad %uint %29 Aligned 4
         %57 = OpIAdd %uint %56 %55
               OpStore %29 %57 Aligned 4
         %58 = OpLoad %uint %29 Aligned 4
         %59 = OpShiftLeftLogical %uint %58 %uint_3
               OpStore %28 %59 Aligned 4
               OpBranch %17
         %17 = OpLabel
         %60 = OpLoad %uint %26 Aligned 4
         %62 = OpSRem %uint %60 %uint_2
         %63 = OpIEqual %bool %62 %uint_0
               OpBranchConditional %63 %18 %19
         %18 = OpLabel
         %64 = OpLoad %_ptr_CrossWorkgroup_uint %25 Aligned 8
         %65 = OpLoad %uint %64 Aligned 4
         %66 = OpLoad %uint %24 Aligned 4
         %67 = OpIAdd %uint %65 %66
         %68 = OpLoad %uint %28 Aligned 4
         %69 = OpIMul %uint %68 %67
               OpStore %28 %69 Aligned 4
         %70 = OpLoad %uint %28 Aligned 4
               OpStore %27 %70 Aligned 4
               OpBranch %19
         %19 = OpLabel
               OpBranch %20
         %20 = OpLabel
         %71 = OpLoad %uint %27 Aligned 4
         %72 = OpLoad %_ptr_CrossWorkgroup_uint %22 Aligned 8
         %73 = OpLoad %uint %26 Aligned 4
         %74 = OpSConvert %ulong %73
         %75 = OpInBoundsPtrAccessChain %_ptr_CrossWorkgroup_uint %72 %74
               OpStore %75 %71 Aligned 4
               OpReturn
               OpFunctionEnd
