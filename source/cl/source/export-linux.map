/* Copyright (C) Codeplay Software Limited. All Rights Reserved. */
/*
  Linker script to only make OpenCL API symbols (and extensions) visible.
 */
OPENCL_1.0 {
  global:
    clGetPlatformIDs;
    clGetPlatformInfo;
    clGetDeviceIDs;
    clGetDeviceInfo;
    clCreateContext;
    clCreateContextFromType;
    clRetainContext;
    clReleaseContext;
    clGetContextInfo;
    clCreateCommandQueue;
    clRetainCommandQueue;
    clReleaseCommandQueue;
    clGetCommandQueueInfo;
    clCreateBuffer;
    clRetainMemObject;
    clReleaseMemObject;
    clGetSupportedImageFormats;
    clGetMemObjectInfo;
    clGetImageInfo;
    clCreateSampler;
    clRetainSampler;
    clReleaseSampler;
    clGetSamplerInfo;
    clCreateProgramWithSource;
    clCreateProgramWithBinary;
    clRetainProgram;
    clReleaseProgram;
    clBuildProgram;
    clGetProgramInfo;
    clGetProgramBuildInfo;
    clCreateKernel;
    clCreateKernelsInProgram;
    clRetainKernel;
    clReleaseKernel;
    clSetKernelArg;
    clGetKernelInfo;
    clGetKernelWorkGroupInfo;
    clWaitForEvents;
    clGetEventInfo;
    clRetainEvent;
    clReleaseEvent;
    clGetEventProfilingInfo;
    clFlush;
    clFinish;
    clEnqueueReadBuffer;
    clEnqueueWriteBuffer;
    clEnqueueCopyBuffer;
    clEnqueueReadImage;
    clEnqueueWriteImage;
    clEnqueueCopyImage;
    clEnqueueCopyImageToBuffer;
    clEnqueueCopyBufferToImage;
    clEnqueueMapBuffer;
    clEnqueueMapImage;
    clEnqueueUnmapMemObject;
    clEnqueueNDRangeKernel;
    clEnqueueTask;
    clEnqueueNativeKernel;
    clCreateImage2D;
    clCreateImage3D;
    clEnqueueMarker;
    clEnqueueWaitForEvents;
    clEnqueueBarrier;
    clUnloadCompiler;
    clGetExtensionFunctionAddress;
  local:
    *;
};

OPENCL_1.1 {
  global:
    clCreateSubBuffer;
    clSetMemObjectDestructorCallback;
    clCreateUserEvent;
    clSetUserEventStatus;
    clSetEventCallback;
    clEnqueueReadBufferRect;
    clEnqueueWriteBufferRect;
    clEnqueueCopyBufferRect;
} OPENCL_1.0;

OPENCL_1.2 {
  global:
    clCreateSubDevices;
    clRetainDevice;
    clReleaseDevice;
    clCreateImage;
    clUnloadPlatformCompiler;
    clCreateProgramWithBuiltInKernels;
    clCompileProgram;
    clLinkProgram;
    clGetKernelArgInfo;
    clEnqueueFillBuffer;
    clEnqueueFillImage;
    clEnqueueMarkerWithWaitList;
    clEnqueueBarrierWithWaitList;
    clEnqueueMigrateMemObjects;
    clGetExtensionFunctionAddressForPlatform;
    /* Extensions */
    clIcdGetPlatformIDsKHR;
} OPENCL_1.1;

OPENCL_2.0 {
    global:
        clCreateCommandQueueWithProperties;
        clCreatePipe;
        clGetPipeInfo;
        clSVMAlloc;
        clSVMFree;
        clEnqueueSVMFree;
        clEnqueueSVMMemcpy;
        clEnqueueSVMMemFill;
        clEnqueueSVMMap;
        clEnqueueSVMUnmap;
        clCreateSamplerWithProperties;
        clSetKernelArgSVMPointer;
        clSetKernelExecInfo;
} OPENCL_1.2;

OPENCL_2.1 {
    global:
        clCloneKernel;
        clCreateProgramWithIL;
        clEnqueueSVMMigrateMem;
        clGetDeviceAndHostTimer;
        clGetHostTimer;
        clGetKernelSubGroupInfo;
        clSetDefaultDeviceCommandQueue;
} OPENCL_2.0;

OPENCL_2.2 {
    global:
        clSetProgramReleaseCallback;
        clSetProgramSpecializationConstant;
} OPENCL_2.1;

OPENCL_3.0 {
    global:
        clSetContextDestructorCallback;
        clCreateBufferWithProperties;
        clCreateImageWithProperties;
} OPENCL_2.2;
