; SPIR-V
; Version: 1.0
; Generator: Codeplay; 0
; Bound: 83        
; Schema: 0
	OpCapability Shader
	OpCapability VariablePointers
	OpExtension "SPV_KHR_storage_buffer_storage_class"
	OpExtension "SPV_KHR_variable_pointers"
	OpMemoryModel Logical GLSL450
	OpEntryPoint GLCompute %32 "codegen_1" %20
	OpSource OpenCL_C 120
	OpDecorate %21 SpecId 0
	OpDecorate %22 SpecId 1
	OpDecorate %23 SpecId 2
	OpDecorate %3 ArrayStride 4
	OpMemberDecorate %4 0 Offset 0
	OpDecorate %4 Block
	OpMemberDecorate %6 0 Offset 0
	OpMemberDecorate %7 0 Offset 0
	OpDecorate %7 Block
	OpDecorate %20 BuiltIn GlobalInvocationId
	OpDecorate %24 BuiltIn WorkgroupSize
	OpDecorate %26 DescriptorSet 0
	OpDecorate %26 Binding 0
	OpDecorate %27 DescriptorSet 0
	OpDecorate %27 Binding 1
	OpDecorate %28 DescriptorSet 0
	OpDecorate %28 Binding 2
	OpDecorate %29 DescriptorSet 0
	OpDecorate %29 Binding 3
	OpDecorate %30 DescriptorSet 0
	OpDecorate %30 Binding 4
	OpDecorate %31 DescriptorSet 0
	OpDecorate %31 Binding 5
%1 = 	OpTypeInt 32 0
%2 = 	OpTypePointer StorageBuffer %1
%3 = 	OpTypeRuntimeArray %1
%4 = 	OpTypeStruct %3
%5 = 	OpTypePointer StorageBuffer %4
%6 = 	OpTypeStruct %1
%7 = 	OpTypeStruct %6
%8 = 	OpTypePointer Uniform %7
%9 = 	OpTypePointer Uniform %6
%10 = 	OpTypeVoid
%11 = 	OpTypeFunction %10
%12 = 	OpTypeVector %1 3
%13 = 	OpTypePointer Input %12
%14 = 	OpTypePointer Input %1
%15 = 	OpTypeBool
%16 = 	OpTypePointer Private %12
%17 = 	OpConstant %1 0
%18 = 	OpConstant %1 1
%19 = 	OpConstant %1 2
%20 = 	OpVariable %13 Input
%21 = 	OpSpecConstant %1 1
%22 = 	OpSpecConstant %1 1
%23 = 	OpSpecConstant %1 1
%24 = 	OpSpecConstantComposite %12 %21 %22 %23
%25 = 	OpVariable %16 Private %24
%26 = 	OpVariable %5 StorageBuffer
%27 = 	OpVariable %5 StorageBuffer
%28 = 	OpVariable %5 StorageBuffer
%29 = 	OpVariable %5 StorageBuffer
%30 = 	OpVariable %5 StorageBuffer
%31 = 	OpVariable %8 Uniform
%32 = 	OpFunction %10 None %11
%33 = 	OpLabel
%34 = 	OpAccessChain %2 %30 %17 %17
%35 = 	OpAccessChain %9 %31 %17
%36 = 	OpLoad %6 %35
%37 = 	OpCompositeExtract %1 %36 0
%38 = 	OpAccessChain %14 %20 %17
%39 = 	OpLoad %1 %38
%40 = 	OpIMul %1 %39 %37
%41 = 	OpIAdd %1 %39 %18
%42 = 	OpIMul %1 %41 %37
%43 = 	OpULessThan %15 %40 %42
	OpSelectionMerge %78 None
	OpBranchConditional %43 %44 %78
%44 = 	OpLabel
%45 = 	OpLoad %1 %34
%46 = 	OpAccessChain %2 %30 %17 %18
%47 = 	OpLoad %1 %46
%48 = 	OpAccessChain %2 %30 %17 %19
%49 = 	OpLoad %1 %48
	OpBranch %50
%50 = 	OpLabel
%52 = 	OpPhi %1 %73 %72 %17 %44
%51 = 	OpPhi %1 %74 %72 %40 %44
%53 = 	OpULessThan %15 %51 %45
	OpLoopMerge %77 %72 None
	OpBranchConditional %53 %54 %58
%54 = 	OpLabel
%55 = 	OpAccessChain %2 %26 %17 %51
%56 = 	OpLoad %1 %55
%57 = 	OpIAdd %1 %56 %52
	OpBranch %58
%58 = 	OpLabel
%59 = 	OpPhi %1 %57 %54 %52 %50
%60 = 	OpULessThan %15 %51 %47
	OpSelectionMerge %65 None
	OpBranchConditional %60 %61 %65
%61 = 	OpLabel
%62 = 	OpAccessChain %2 %27 %17 %51
%63 = 	OpLoad %1 %62
%64 = 	OpIAdd %1 %63 %59
	OpBranch %65
%65 = 	OpLabel
%66 = 	OpPhi %1 %64 %61 %59 %58
%67 = 	OpULessThan %15 %51 %49
	OpSelectionMerge %72 None
	OpBranchConditional %67 %68 %72
%68 = 	OpLabel
%69 = 	OpAccessChain %2 %28 %17 %51
%70 = 	OpLoad %1 %69
%71 = 	OpIAdd %1 %70 %66
	OpBranch %72
%72 = 	OpLabel
%73 = 	OpPhi %1 %71 %68 %66 %65
%74 = 	OpIAdd %1 %51 %18
%75 = 	OpULessThan %15 %74 %42
%76 = 	OpLogicalNot %15 %75
	OpBranchConditional %76 %77 %50
%77 = 	OpLabel
	OpBranch %78
%78 = 	OpLabel
%79 = 	OpPhi %1 %73 %77 %17 %33
	OpBranch %80
%80 = 	OpLabel
%81 = 	OpPhi %1 %79 %78
%82 = 	OpAccessChain %2 %29 %17 %39
	OpStore %82 %81
	OpReturn
	OpFunctionEnd
