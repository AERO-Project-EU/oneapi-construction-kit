; SPIR-V
; Version: 1.0
; Generator: Codeplay; 0
; Bound: 96        
; Schema: 0
	OpCapability Shader
	OpCapability VariablePointers
	OpExtension "SPV_KHR_storage_buffer_storage_class"
	OpExtension "SPV_KHR_variable_pointers"
	OpMemoryModel Logical GLSL450
	OpEntryPoint GLCompute %32 "sibling_loops" %22 %28
	OpSource OpenCL_C 120
	OpDecorate %23 SpecId 0
	OpDecorate %24 SpecId 1
	OpDecorate %25 SpecId 2
	OpDecorate %3 ArrayStride 4
	OpMemberDecorate %4 0 Offset 0
	OpDecorate %4 Block
	OpDecorate %22 BuiltIn GlobalInvocationId
	OpDecorate %26 BuiltIn WorkgroupSize
	OpDecorate %28 BuiltIn NumWorkgroups
	OpDecorate %29 DescriptorSet 0
	OpDecorate %29 Binding 0
	OpDecorate %30 DescriptorSet 0
	OpDecorate %30 Binding 1
	OpDecorate %31 DescriptorSet 0
	OpDecorate %31 Binding 2
%1 = 	OpTypeInt 32 0
%2 = 	OpTypePointer StorageBuffer %1
%3 = 	OpTypeRuntimeArray %1
%4 = 	OpTypeStruct %3
%5 = 	OpTypePointer StorageBuffer %4
%6 = 	OpTypeVoid
%7 = 	OpTypeFunction %6
%8 = 	OpTypeVector %1 3
%9 = 	OpTypePointer Input %8
%10 = 	OpTypePointer Input %1
%11 = 	OpTypePointer Private %8
%12 = 	OpTypePointer Private %1
%13 = 	OpTypeBool
%14 = 	OpConstant %1 0
%15 = 	OpConstant %1 1
%16 = 	OpUndef %1
%17 = 	OpConstantFalse %13
%18 = 	OpConstantTrue %13
%19 = 	OpConstant %1 4294967291
%20 = 	OpConstant %1 17
%21 = 	OpConstant %1 3
%22 = 	OpVariable %9 Input
%23 = 	OpSpecConstant %1 1
%24 = 	OpSpecConstant %1 1
%25 = 	OpSpecConstant %1 1
%26 = 	OpSpecConstantComposite %8 %23 %24 %25
%27 = 	OpVariable %11 Private %26
%28 = 	OpVariable %9 Input
%29 = 	OpVariable %5 StorageBuffer
%30 = 	OpVariable %5 StorageBuffer
%31 = 	OpVariable %5 StorageBuffer
%32 = 	OpFunction %6 None %7
%33 = 	OpLabel
%34 = 	OpAccessChain %10 %22 %14
%35 = 	OpLoad %1 %34
%36 = 	OpAccessChain %12 %27 %14
%37 = 	OpLoad %1 %36
%38 = 	OpAccessChain %10 %28 %14
%39 = 	OpLoad %1 %38
	OpBranch %40
%40 = 	OpLabel
%42 = 	OpPhi %1 %14 %33 %55 %53
%41 = 	OpPhi %1 %14 %33 %56 %53
%43 = 	OpBitwiseAnd %1 %41 %15
%44 = 	OpIEqual %13 %43 %14
%45 = 	OpLogicalNot %13 %44
	OpLoopMerge %58 %53 None
	OpBranchConditional %45 %46 %50
%46 = 	OpLabel
%47 = 	OpAccessChain %2 %30 %14 %41
%48 = 	OpLoad %1 %47
%49 = 	OpShiftLeftLogical %1 %48 %15
	OpBranch %50
%50 = 	OpLabel
%52 = 	OpPhi %13 %17 %46 %18 %40
%51 = 	OpPhi %1 %49 %46 %16 %40
	OpSelectionMerge %53 None
	OpBranchConditional %52 %92 %53
%53 = 	OpLabel
%54 = 	OpPhi %1 %95 %92 %51 %50
%55 = 	OpIAdd %1 %54 %42
%56 = 	OpIAdd %1 %41 %15
%57 = 	OpUGreaterThan %13 %56 %35
	OpBranchConditional %57 %58 %40
%58 = 	OpLabel
%59 = 	OpIMul %1 %39 %37
%60 = 	OpIAdd %1 %35 %15
%61 = 	OpULessThan %13 %60 %59
	OpSelectionMerge %87 None
	OpBranchConditional %61 %62 %87
%62 = 	OpLabel
	OpBranch %63
%63 = 	OpLabel
%65 = 	OpPhi %1 %78 %76 %55 %62
%64 = 	OpPhi %1 %79 %76 %60 %62
%66 = 	OpBitwiseAnd %1 %64 %15
%67 = 	OpIEqual %13 %66 %14
%68 = 	OpLogicalNot %13 %67
	OpLoopMerge %82 %76 None
	OpBranchConditional %68 %69 %73
%69 = 	OpLabel
%70 = 	OpAccessChain %2 %29 %14 %64
%71 = 	OpLoad %1 %70
%72 = 	OpIMul %1 %71 %19
	OpBranch %73
%73 = 	OpLabel
%75 = 	OpPhi %13 %17 %69 %18 %63
%74 = 	OpPhi %1 %72 %69 %16 %63
	OpSelectionMerge %76 None
	OpBranchConditional %75 %83 %76
%76 = 	OpLabel
%77 = 	OpPhi %1 %86 %83 %74 %73
%78 = 	OpIAdd %1 %77 %65
%79 = 	OpIAdd %1 %64 %15
%80 = 	OpULessThan %13 %79 %59
%81 = 	OpLogicalNot %13 %80
	OpBranchConditional %81 %82 %63
%82 = 	OpLabel
	OpBranch %87
%83 = 	OpLabel
%84 = 	OpAccessChain %2 %30 %14 %64
%85 = 	OpLoad %1 %84
%86 = 	OpIMul %1 %85 %20
	OpBranch %76
%87 = 	OpLabel
%88 = 	OpPhi %1 %78 %82 %55 %58
	OpBranch %89
%89 = 	OpLabel
%90 = 	OpPhi %1 %88 %87
%91 = 	OpAccessChain %2 %31 %14 %35
	OpStore %91 %90
	OpReturn
%92 = 	OpLabel
%93 = 	OpAccessChain %2 %29 %14 %41
%94 = 	OpLoad %1 %93
%95 = 	OpIMul %1 %94 %21
	OpBranch %53
	OpFunctionEnd
