// Copyright (C) Codeplay Software Limited
//
// Licensed under the Apache License, Version 2.0 (the "License") with LLVM
// Exceptions; you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations
// under the License.
//
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

#version 450

layout(local_size_x = 2, local_size_y = 2, local_size_z = 1) in;

layout(set = 0, binding = 0) buffer a_buffer { float mat_A[]; };
layout(set = 0, binding = 1) buffer b_buffer { float mat_B[]; };
layout(set = 0, binding = 2) buffer out_buffer { float mat_C[]; };

layout(set = 0, binding = 3) uniform args {
  uint M;
  uint K;
  uint N;
};

void main() {
  uint xindex = gl_GlobalInvocationID.x;
  uint yindex = gl_GlobalInvocationID.y;
  float sum = 0.;
  uint a_row_length = K;
  uint b_row_length = N;

  for (int i = 0; i < K; i++)
    sum += mat_A[yindex * a_row_length + i] * mat_B[i * b_row_length + xindex];

  mat_C[yindex * b_row_length + xindex] = sum;
}
