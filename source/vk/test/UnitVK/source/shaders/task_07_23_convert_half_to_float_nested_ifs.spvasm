; SPIR-V
; Version: 1.0
; Generator: Codeplay; 0
; Bound: 116       
; Schema: 0
	OpCapability Shader
	OpCapability Int16
	OpCapability VariablePointers
	OpExtension "SPV_KHR_storage_buffer_storage_class"
	OpExtension "SPV_KHR_variable_pointers"
	OpMemoryModel Logical GLSL450
	OpEntryPoint GLCompute %46 "convert_half_to_float_nested_ifs" %38
	OpSource OpenCL_C 120
	OpDecorate %39 SpecId 0
	OpDecorate %40 SpecId 1
	OpDecorate %41 SpecId 2
	OpDecorate %3 ArrayStride 2
	OpMemberDecorate %4 0 Offset 0
	OpDecorate %4 Block
	OpDecorate %8 ArrayStride 4
	OpMemberDecorate %9 0 Offset 0
	OpDecorate %9 Block
	OpDecorate %38 BuiltIn GlobalInvocationId
	OpDecorate %42 BuiltIn WorkgroupSize
	OpDecorate %44 DescriptorSet 0
	OpDecorate %44 Binding 0
	OpDecorate %45 DescriptorSet 0
	OpDecorate %45 Binding 1
%1 = 	OpTypeInt 16 0
%2 = 	OpTypePointer StorageBuffer %1
%3 = 	OpTypeRuntimeArray %1
%4 = 	OpTypeStruct %3
%5 = 	OpTypePointer StorageBuffer %4
%6 = 	OpTypeInt 32 0
%7 = 	OpTypePointer StorageBuffer %6
%8 = 	OpTypeRuntimeArray %6
%9 = 	OpTypeStruct %8
%10 = 	OpTypePointer StorageBuffer %9
%11 = 	OpTypeVoid
%12 = 	OpTypeFunction %11
%13 = 	OpTypeVector %6 3
%14 = 	OpTypePointer Input %13
%15 = 	OpTypePointer Input %6
%16 = 	OpTypeBool
%17 = 	OpTypePointer Private %13
%18 = 	OpConstant %6 0
%19 = 	OpConstant %1 1023
%20 = 	OpConstant %1 31744
%21 = 	OpConstant %6 10
%22 = 	OpConstant %6 15
%23 = 	OpConstant %6 31
%24 = 	OpConstant %6 255
%25 = 	OpUndef %6
%26 = 	OpConstantTrue %16
%27 = 	OpConstantFalse %16
%28 = 	OpConstant %6 23
%29 = 	OpConstant %1 0
%30 = 	OpConstant %6 4294967295
%31 = 	OpConstant %6 1
%32 = 	OpConstant %6 1024
%33 = 	OpConstant %6 14
%34 = 	OpConstant %6 8372224
%35 = 	OpConstant %6 111
%36 = 	OpConstant %6 13
%37 = 	OpConstant %6 112
%38 = 	OpVariable %14 Input
%39 = 	OpSpecConstant %6 1
%40 = 	OpSpecConstant %6 1
%41 = 	OpSpecConstant %6 1
%42 = 	OpSpecConstantComposite %13 %39 %40 %41
%43 = 	OpVariable %17 Private %42
%44 = 	OpVariable %5 StorageBuffer
%45 = 	OpVariable %10 StorageBuffer
%46 = 	OpFunction %11 None %12
%47 = 	OpLabel
%48 = 	OpAccessChain %15 %38 %18
%49 = 	OpLoad %6 %48
%50 = 	OpAccessChain %2 %44 %18 %49
%51 = 	OpLoad %1 %50
%52 = 	OpBitwiseAnd %1 %51 %19
%53 = 	OpUConvert %6 %52
%54 = 	OpBitwiseAnd %1 %51 %20
%55 = 	OpUConvert %6 %54
%56 = 	OpShiftRightLogical %6 %55 %21
%57 = 	OpUConvert %6 %51
%58 = 	OpShiftRightLogical %6 %57 %22
	OpBranch %59
%59 = 	OpLabel
%60 = 	OpSLessThan %16 %56 %23
%61 = 	OpLogicalNot %16 %60
	OpSelectionMerge %65 None
	OpBranchConditional %61 %62 %65
%62 = 	OpLabel
%63 = 	OpIEqual %16 %56 %23
%64 = 	OpLogicalNot %16 %63
	OpBranch %65
%65 = 	OpLabel
%69 = 	OpPhi %16 %27 %62 %26 %59
%68 = 	OpPhi %16 %64 %62 %27 %59
%67 = 	OpPhi %16 %26 %62 %27 %59
%66 = 	OpPhi %6 %24 %62 %25 %59
	OpSelectionMerge %70 None
	OpBranchConditional %69 %113 %70
%70 = 	OpLabel
%72 = 	OpPhi %16 %115 %113 %68 %65
%71 = 	OpPhi %16 %26 %113 %27 %65
	OpSelectionMerge %73 None
	OpBranchConditional %72 %110 %73
%73 = 	OpLabel
%76 = 	OpPhi %16 %26 %111 %67 %70
%75 = 	OpPhi %16 %27 %111 %71 %70
%74 = 	OpPhi %6 %112 %111 %66 %70
	OpSelectionMerge %77 None
	OpBranchConditional %76 %107 %77
%77 = 	OpLabel
%79 = 	OpPhi %6 %109 %107 %25 %73
%78 = 	OpPhi %6 %108 %107 %25 %73
	OpSelectionMerge %80 None
	OpBranchConditional %75 %88 %80
%80 = 	OpLabel
%82 = 	OpPhi %6 %78 %77 %105 %104
%81 = 	OpPhi %6 %79 %77 %106 %104
%83 = 	OpShiftLeftLogical %6 %58 %23
%84 = 	OpShiftLeftLogical %6 %82 %28
%85 = 	OpBitwiseOr %6 %81 %83
%86 = 	OpBitwiseOr %6 %85 %84
%87 = 	OpAccessChain %7 %45 %18 %49
	OpStore %87 %86
	OpReturn
%88 = 	OpLabel
%89 = 	OpIEqual %16 %52 %29
%90 = 	OpLogicalNot %16 %89
	OpSelectionMerge %104 None
	OpBranchConditional %90 %91 %104
%91 = 	OpLabel
	OpBranch %92
%92 = 	OpLabel
%94 = 	OpPhi %6 %95 %92 %53 %91
%93 = 	OpPhi %6 %96 %92 %30 %91
%95 = 	OpShiftLeftLogical %6 %94 %31
%96 = 	OpIAdd %6 %93 %31
%97 = 	OpBitwiseAnd %6 %95 %32
%98 = 	OpIEqual %16 %97 %18
%99 = 	OpLogicalNot %16 %98
	OpLoopMerge %100 %92 None
	OpBranchConditional %99 %100 %92
%100 = 	OpLabel
%101 = 	OpShiftLeftLogical %6 %94 %33
%102 = 	OpBitwiseAnd %6 %101 %34
%103 = 	OpISub %6 %35 %93
	OpBranch %104
%104 = 	OpLabel
%106 = 	OpPhi %6 %102 %100 %18 %88
%105 = 	OpPhi %6 %103 %100 %18 %88
	OpBranch %80
%107 = 	OpLabel
%108 = 	OpPhi %6 %74 %73
%109 = 	OpShiftLeftLogical %6 %53 %36
	OpBranch %77
%110 = 	OpLabel
	OpBranch %111
%111 = 	OpLabel
%112 = 	OpIAdd %6 %56 %37
	OpBranch %73
%113 = 	OpLabel
%114 = 	OpIEqual %16 %56 %18
%115 = 	OpLogicalNot %16 %114
	OpBranch %70
	OpFunctionEnd
