; SPIR-V
; Version: 1.0
; Generator: Codeplay; 0
; Bound: 71        
; Schema: 0
	OpCapability Shader
	OpCapability VariablePointers
	OpExtension "SPV_KHR_storage_buffer_storage_class"
	OpExtension "SPV_KHR_variable_pointers"
	OpMemoryModel Logical GLSL450
	OpEntryPoint GLCompute %30 "if_in_uniform_loop" %20 %26
	OpSource OpenCL_C 120
	OpDecorate %21 SpecId 0
	OpDecorate %22 SpecId 1
	OpDecorate %23 SpecId 2
	OpDecorate %3 ArrayStride 4
	OpMemberDecorate %4 0 Offset 0
	OpDecorate %4 Block
	OpDecorate %20 BuiltIn GlobalInvocationId
	OpDecorate %24 BuiltIn WorkgroupSize
	OpDecorate %26 BuiltIn NumWorkgroups
	OpDecorate %27 DescriptorSet 0
	OpDecorate %27 Binding 0
	OpDecorate %28 DescriptorSet 0
	OpDecorate %28 Binding 1
	OpDecorate %29 DescriptorSet 0
	OpDecorate %29 Binding 2
%1 = 	OpTypeInt 32 0
%2 = 	OpTypePointer StorageBuffer %1
%3 = 	OpTypeRuntimeArray %1
%4 = 	OpTypeStruct %3
%5 = 	OpTypePointer StorageBuffer %4
%6 = 	OpTypeVoid
%7 = 	OpTypeFunction %6
%8 = 	OpTypeVector %1 3
%9 = 	OpTypePointer Input %8
%10 = 	OpTypePointer Input %1
%11 = 	OpTypePointer Private %8
%12 = 	OpTypePointer Private %1
%13 = 	OpTypeBool
%14 = 	OpConstant %1 0
%15 = 	OpConstant %1 1
%16 = 	OpUndef %1
%17 = 	OpConstantFalse %13
%18 = 	OpConstantTrue %13
%19 = 	OpConstant %1 3
%20 = 	OpVariable %9 Input
%21 = 	OpSpecConstant %1 1
%22 = 	OpSpecConstant %1 1
%23 = 	OpSpecConstant %1 1
%24 = 	OpSpecConstantComposite %8 %21 %22 %23
%25 = 	OpVariable %11 Private %24
%26 = 	OpVariable %9 Input
%27 = 	OpVariable %5 StorageBuffer
%28 = 	OpVariable %5 StorageBuffer
%29 = 	OpVariable %5 StorageBuffer
%30 = 	OpFunction %6 None %7
%31 = 	OpLabel
%32 = 	OpAccessChain %10 %20 %14
%33 = 	OpLoad %1 %32
%34 = 	OpAccessChain %12 %25 %14
%35 = 	OpLoad %1 %34
%36 = 	OpAccessChain %10 %26 %14
%37 = 	OpLoad %1 %36
%38 = 	OpIMul %1 %37 %35
%39 = 	OpIEqual %13 %38 %14
%40 = 	OpLogicalNot %13 %39
	OpSelectionMerge %66 None
	OpBranchConditional %40 %41 %66
%41 = 	OpLabel
%42 = 	OpBitwiseAnd %1 %33 %15
%43 = 	OpIEqual %13 %42 %14
%44 = 	OpLogicalNot %13 %43
	OpBranch %45
%45 = 	OpLabel
%47 = 	OpPhi %1 %57 %55 %14 %41
%46 = 	OpPhi %1 %58 %55 %14 %41
	OpLoopMerge %61 %55 None
	OpBranchConditional %44 %48 %52
%48 = 	OpLabel
%49 = 	OpAccessChain %2 %28 %14 %46
%50 = 	OpLoad %1 %49
%51 = 	OpShiftLeftLogical %1 %50 %15
	OpBranch %52
%52 = 	OpLabel
%54 = 	OpPhi %13 %17 %48 %18 %45
%53 = 	OpPhi %1 %51 %48 %16 %45
	OpSelectionMerge %55 None
	OpBranchConditional %54 %62 %55
%55 = 	OpLabel
%56 = 	OpPhi %1 %65 %62 %53 %52
%57 = 	OpIAdd %1 %56 %47
%58 = 	OpIAdd %1 %46 %15
%59 = 	OpULessThan %13 %58 %38
%60 = 	OpLogicalNot %13 %59
	OpBranchConditional %60 %61 %45
%61 = 	OpLabel
	OpBranch %66
%62 = 	OpLabel
%63 = 	OpAccessChain %2 %27 %14 %46
%64 = 	OpLoad %1 %63
%65 = 	OpIMul %1 %64 %19
	OpBranch %55
%66 = 	OpLabel
%67 = 	OpPhi %1 %57 %61 %14 %31
	OpBranch %68
%68 = 	OpLabel
%69 = 	OpPhi %1 %67 %66
%70 = 	OpAccessChain %2 %29 %14 %33
	OpStore %70 %69
	OpReturn
	OpFunctionEnd
