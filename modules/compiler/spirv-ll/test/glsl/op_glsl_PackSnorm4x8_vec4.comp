// Copyright (C) Codeplay Software Limited. All Rights Reserved.

// RUN: %spirv-ll -a Vulkan %spv_file_s | %filecheck %s

// CHECK: ; ModuleID = '{{.*}}'
#version 450

layout (std430, set=0, binding=0) buffer inA {
  vec4 arg0;
};

layout (std430, set=0, binding=1) buffer outR {
  uint res;
};

void main() {
// CHECK: define spir_kernel void @main(ptr addrspace(1){{( %0)?}}, ptr addrspace(1){{( %1)?}}, ptr addrspace(1){{( %2)?}}) {
// CHECK:   [[arg0:%[a-zA-Z0-9]+]] = getelementptr [[inA:%.*]], ptr addrspace(1) {{%[a-zA-Z0-9]+}}, i32 0, i32 0
// CHECK:   [[arg0value:%[a-zA-Z0-9]+]] = load <4 x float>, ptr addrspace(1) [[arg0]]
  res = packSnorm4x8(arg0);
// CHECK:   [[call:%[a-zA-Z0-9]+]] = call spir_func i32 @_Z12packSnorm4x8Dv4_f(<4 x float> [[arg0value]])
// CHECK:   [[res:%[a-zA-Z0-9]+]] = getelementptr [[outR:%.*]], ptr addrspace(1) {{%[a-zA-Z0-9]+}}, i32 0, i32 0
// CHECK:   store i32 [[call]], ptr addrspace(1) [[res]]
// CHECK:   ret void
}
// CHECK: }
