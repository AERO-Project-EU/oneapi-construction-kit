// Copyright (C) Codeplay Software Limited. All Rights Reserved.

// RUN: %spirv-ll -a Vulkan %p/op_glsl_UnpackHalf2x16_uint.spv | %filecheck %s

#version 450

layout (std430, set=0, binding=0) buffer inA {
  uint arg0;
};

layout (std430, set=0, binding=1) buffer outR {
  vec2 res;
};

void main() {
  res = unpackHalf2x16(arg0);
}

// CHECK: ; ModuleID = '{{.*}}'

// CHECK: define spir_kernel void @main(ptr addrspace(1){{( %0)?}}, ptr addrspace(1){{( %1)?}}, ptr addrspace(1){{( %2)?}}) {
// CHECK: [[bufferArg0:%[a-zA-Z0-9]+]] = getelementptr [[inA:%.*]], ptr addrspace(1) %0, i32 0, i32 0
// CHECK: [[arg0:%[a-zA-Z0-9]+]] = load i32, ptr addrspace(1) [[bufferArg0]]
// CHECK: [[call:%[a-zA-Z0-9]+]] = call spir_func <2 x float> @_Z14unpackHalf2x16j(i32 [[arg0]])
// CHECK: [[res:%[a-zA-Z0-9]+]] = getelementptr [[outR:%.*]], ptr addrspace(1) %1, i32 0, i32 0
// CHECK: store <2 x float> [[call]], ptr addrspace(1) [[res]]
// CHECK: ret void
// CHECK: }
