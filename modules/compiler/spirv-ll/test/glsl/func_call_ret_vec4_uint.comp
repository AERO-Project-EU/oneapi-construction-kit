// Copyright (C) Codeplay Software Limited. All Rights Reserved.

// RUN: %spirv-ll -a Vulkan %p/func_call_ret_vec4_uint.spv | %filecheck %s

#version 450

uvec4 func_call_ret_vec4_uint() {
  uvec4 a = uvec4(42, 42, 42, 42);
  return a;
}

void main() {
  uvec4 a = func_call_ret_vec4_uint();
}

// CHECK: ; ModuleID = '{{.*}}'
// CHECK: define spir_kernel void @main() {
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = alloca <4 x i32>
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = call spir_func <4 x i32> @{{("func_call_ret_vec4_uint.+")}}()
// CHECK: store <4 x i32> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: ret void
// CHECK: define private spir_func <4 x i32> @{{("func_call_ret_vec4_uint.+")}}()
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = alloca <4 x i32>
// CHECK: store <4 x i32> <i32 42, i32 42, i32 42, i32 42>, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = load <4 x i32>, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: ret <4 x i32> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
