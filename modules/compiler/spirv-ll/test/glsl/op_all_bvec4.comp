// Copyright (C) Codeplay Software Limited. All Rights Reserved.

// RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
// RUN: %spirv-ll -a Vulkan %p/op_all_bvec4.spv -o %t
// RUN: %filecheck < %t %t.pp

#version 450

void main() {
  bvec4 vec = bvec4(true, true, true, true);
  bool result = all(vec);
}

// CHECK: ; ModuleID = '{{.*}}'
// CHECK: define spir_kernel void @main() {
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = alloca <4 x i1>
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = alloca i1
// CHECK-GE15: store <4 x i1> <i1 true, i1 true, i1 true, i1 true>, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK-LT15: store <4 x i1> <i1 true, i1 true, i1 true, i1 true>, <4 x i1>* {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK-GE15: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = load <4 x i1>, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK-LT15: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = load <4 x i1>, <4 x i1>* {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = sext <4 x i1> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} to <4 x i32>
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = call spir_func i32 @_Z3allDv4_i(<4 x i32> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}})
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = trunc i32 {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} to i1
// CHECK-GE15: store i1 {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK-LT15: store i1 {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, i1* {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: ret void
// CHECK: declare spir_func i32 @_Z3allDv4_i(<4 x i32>)
