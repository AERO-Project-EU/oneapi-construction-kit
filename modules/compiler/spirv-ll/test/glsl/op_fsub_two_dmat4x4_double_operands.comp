// Copyright (C) Codeplay Software Limited. All Rights Reserved.

// RUN: %spirv-ll -a Vulkan -c Float64 %p/op_fsub_two_dmat4x4_double_operands.spv -o %t
// RUN: %filecheck < %t %s

#version 450

void main() {
  dmat4x4 a = {
      {-42.42, -42.42, -42.42, -42.42},
      {-42.42, -42.42, -42.42, -42.42},
      {-42.42, -42.42, -42.42, -42.42},
      {-42.42, -42.42, -42.42, -42.42}
  };
  dmat4x4 b = {
      {-42.42, -42.42, -42.42, -42.42},
      {-42.42, -42.42, -42.42, -42.42},
      {-42.42, -42.42, -42.42, -42.42},
      {-42.42, -42.42, -42.42, -42.42}
  };
  dmat4x4 c = a - b;
}

// CHECK: ; ModuleID = '{{.*}}'
// CHECK: define spir_kernel void @main()
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = extractvalue [4 x <4 x double>] {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, 0
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = extractvalue [4 x <4 x double>] {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, 0
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = fsub <4 x double> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = extractvalue [4 x <4 x double>] {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, 1
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = extractvalue [4 x <4 x double>] {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, 1
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = fsub <4 x double> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = extractvalue [4 x <4 x double>] {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, 2
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = extractvalue [4 x <4 x double>] {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, 2
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = fsub <4 x double> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = extractvalue [4 x <4 x double>] {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, 3
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = extractvalue [4 x <4 x double>] {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, 3
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = fsub <4 x double> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: [[INITIAL:%[a-zA-Z0-9_]+]] = insertvalue [4 x <4 x double>] undef, <4 x double> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, 0
// CHECK: [[INSERT1:%[a-zA-Z0-9_]+]] = insertvalue [4 x <4 x double>] [[INITIAL]], <4 x double> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, 1
// CHECK: [[INSERT2:%[a-zA-Z0-9_]+]] = insertvalue [4 x <4 x double>] [[INSERT1]], <4 x double> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, 2
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = insertvalue [4 x <4 x double>] [[INSERT2]], <4 x double> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, 3
// CHECK: ret void
