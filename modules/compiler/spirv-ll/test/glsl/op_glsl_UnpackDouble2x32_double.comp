// Copyright (C) Codeplay Software Limited. All Rights Reserved.

// RUN: %spirv-ll -a Vulkan -c Float64 -c Float64 %p/op_glsl_UnpackDouble2x32_double.spv | %filecheck %s

#version 450

layout (std430, set=0, binding=0) buffer inA {
  double arg0;
};

layout (std430, set=0, binding=1) buffer outR {
  uvec2 res;
};

void main() {
  res = unpackDouble2x32(arg0);
}

// CHECK: ; ModuleID = '{{.*}}'

// CHECK: define spir_kernel void @main(ptr addrspace(1){{( %0)?}}, ptr addrspace(1){{( %1)?}}, ptr addrspace(1){{( %2)?}}) {
// CHECK:   [[bufferArg0:%[a-zA-Z0-9]+]] = getelementptr [[inA:%.*]], ptr addrspace(1) {{%[a-zA-Z0-9]+}}, i32 0, i32 0
// CHECK:   [[arg0:%[a-zA-Z0-9]+]] = load double, ptr addrspace(1) [[bufferArg0]]
// CHECK:   [[cast:%[a-zA-Z0-9]+]] = bitcast double [[arg0]] to <2 x i32>
// CHECK:   [[res:%[a-zA-Z0-9]+]] = getelementptr [[outR:%.*]], ptr addrspace(1) {{%[a-zA-Z0-9]+}}, i32 0, i32 0
// CHECK:   store <2 x i32> [[cast]], ptr addrspace(1) [[res]]
// CHECK:   ret void
// CHECK: }
