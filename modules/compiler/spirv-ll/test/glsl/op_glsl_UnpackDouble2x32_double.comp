// Copyright (C) Codeplay Software Limited. All Rights Reserved.

// RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
// RUN: %spirv-ll -a Vulkan -c Float64 -c Float64 %p/op_glsl_UnpackDouble2x32_double.spv -o %t
// RUN: %filecheck < %t %t.pp

#version 450

layout (std430, set=0, binding=0) buffer inA {
  double arg0;
};

layout (std430, set=0, binding=1) buffer outR {
  uvec2 res;
};

void main() {
  res = unpackDouble2x32(arg0);
}

// CHECK: ; ModuleID = '{{.*}}'

// CHECK-GE15: define spir_kernel void @main(ptr addrspace(1){{( %0)?}}, ptr addrspace(1){{( %1)?}}, ptr addrspace(1){{( %2)?}}) {
// CHECK-LT15: define spir_kernel void @main([[inA:%[a-zA-Z0-9]+]] addrspace(1)*{{( %0)?}}, [[outR:%[a-zA-Z0-9]+]] addrspace(1)*{{( %1)?}}, i32 addrspace(1)*{{( %2)?}}) {
// CHECK-GE15:   [[bufferArg0:%[a-zA-Z0-9]+]] = getelementptr [[inA:%.*]], ptr addrspace(1) {{%[a-zA-Z0-9]+}}, i32 0, i32 0
// CHECK-LT15:   [[bufferArg0:%[a-zA-Z0-9]+]] = getelementptr [[inA]], [[inA]] addrspace(1)* {{%[a-zA-Z0-9]+}}, i32 0, i32 0
// CHECK-GE15:   [[arg0:%[a-zA-Z0-9]+]] = load double, ptr addrspace(1) [[bufferArg0]]
// CHECK-LT15:   [[arg0:%[a-zA-Z0-9]+]] = load double, double addrspace(1)* [[bufferArg0]]
// CHECK:   [[cast:%[a-zA-Z0-9]+]] = bitcast double [[arg0]] to <2 x i32>
// CHECK-GE15:   [[res:%[a-zA-Z0-9]+]] = getelementptr [[outR:%.*]], ptr addrspace(1) {{%[a-zA-Z0-9]+}}, i32 0, i32 0
// CHECK-LT15:   [[res:%[a-zA-Z0-9]+]] = getelementptr [[outR]], [[outR]] addrspace(1)* {{%[a-zA-Z0-9]+}}, i32 0, i32 0
// CHECK-GE15:   store <2 x i32> [[cast]], ptr addrspace(1) [[res]]
// CHECK-LT15:   store <2 x i32> [[cast]], <2 x i32> addrspace(1)* [[res]]
// CHECK:   ret void
// CHECK: }
