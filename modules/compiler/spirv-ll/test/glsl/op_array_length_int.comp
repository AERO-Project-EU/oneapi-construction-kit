// Copyright (C) Codeplay Software Limited. All Rights Reserved.

// RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
// RUN: %spirv-ll -a Vulkan %p/op_array_length_int.spv -o %t
// RUN: %filecheck < %t %t.pp

#version 450

layout (set=0, binding=0) buffer block {
  int a;
  int[] runtime_array;
};

void main() {
  int result = runtime_array.length();
}

// CHECK: ; ModuleID = '{{.*}}'
// CHECK-GE15: define spir_kernel void @main(ptr addrspace(1){{( %0)?}}, ptr addrspace(1){{( %1)?}}) {
// CHECK-LT15: define spir_kernel void @main([[block:%[a-zA-Z0-9]+]] addrspace(1)*{{( %0)?}}, i32 addrspace(1)*{{( %1)?}}) {
// CHECK: [[result:%[a-zA-Z0-9]+]] = alloca i32
// CHECK-GE15: [[result_a_ptr:%[a-zA-Z0-9]+]] = getelementptr i32, ptr addrspace(1) {{%[a-zA-Z0-9]+}}, i32 0
// CHECK-LT15: [[result_a_ptr:%[a-zA-Z0-9]+]] = getelementptr i32, i32 addrspace(1)* {{%[a-zA-Z0-9]+}}, i32 0
// CHECK-GE15: [[result_a:%[a-zA-Z0-9]+]] = load i32, ptr addrspace(1) [[result_a_ptr]]
// CHECK-LT15: [[result_a:%[a-zA-Z0-9]+]] = load i32, i32 addrspace(1)* [[result_a_ptr]]
// CHECK: [[result_a_sub:%[a-zA-Z0-9]+]] = sub i32 [[result_a]], 4
// CHECK: [[result_a_div:%[a-zA-Z0-9]+]] = udiv i32 [[result_a_sub]], {{4|8}}
// CHECK-GE15: store i32 [[result_a_div]], ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK-LT15: store i32 [[result_a_div]], i32* {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: ret void
