// Copyright (C) Codeplay Software Limited. All Rights Reserved.

// RUN: %spirv-ll -a Vulkan %spv_file_s | %filecheck %s

#version 450

bvec2 func_call_ret_vec2_bool() {
  bvec2 a = bvec2(true, true);
  return a;
}

void main() {
  bvec2 a = func_call_ret_vec2_bool();
}

// CHECK: ; ModuleID = '{{.*}}'
// CHECK: define spir_kernel void @main() {
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = alloca <2 x i1>
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = call spir_func <2 x i1> @{{("func_call_ret_vec2_bool.+")}}()
// CHECK: store <2 x i1> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: ret void
// CHECK: define private spir_func <2 x i1> @{{("func_call_ret_vec2_bool.+")}}()
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = alloca <2 x i1>
// CHECK: store <2 x i1> <i1 true, i1 true>, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = load <2 x i1>, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: ret <2 x i1> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
