; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
; RUN: %spirv-ll -a OpenCL -b 64 -c GenericPointer %p/op_generic_pointer.spv | %filecheck %t.pp

               OpCapability Addresses
               OpCapability Linkage
               OpCapability Kernel
               OpCapability Int64
               OpCapability GenericPointer
               OpMemoryModel Physical64 OpenCL
               OpEntryPoint Kernel %20 "entry_pt"

       %void = OpTypeVoid
      %ulong = OpTypeInt 64 0
        %_ptr_ulong = OpTypePointer CrossWorkgroup %ulong
        %_ptr_Generic_ulong = OpTypePointer Generic %ulong

    %ulong_0 = OpConstant %ulong 0
    %ulong_1 = OpConstant %ulong 1

         %19 = OpTypeFunction %void %_ptr_Generic_ulong
         %20 = OpFunction %void None %19
   %_arg_ptr = OpFunctionParameter %_ptr_Generic_ulong
; Check we use the right address space for generic pointers
; CHECK-GE15: define spir_kernel void @entry_pt(ptr addrspace(4) [[PTR:%.*]])
; CHECK-LT15: define spir_kernel void @entry_pt(i64 addrspace(4)* [[PTR:%.*]])
      %entry = OpLabel

          %x = OpIAdd %uint %ulong_0 %ulong_1

; CHECK-GE15: store i64 1, ptr addrspace(4) [[PTR]], align 4
; CHECK-LT15: store i64 1, i64 addrspace(4)* [[PTR]], align 4
               OpStore %_arg_ptr %x Aligned 4

; CHECK-GE15: [[PCAST:%.*]] = addrspacecast ptr addrspace(4) [[PTR]] to ptr addrspace(1)
; CHECK-GE15: store i64 1, ptr addrspace(1) [[PCAST]], align 4
; CHECK-LT15: [[PCAST:%.*]] = addrspacecast i64 addrspace(4)* [[PTR]] to i64 addrspace(1)*
; CHECK-LT15: store i64 1, i64 addrspace(1)* [[PCAST]], align 4
               %p = OpGenericCastToPtr %_ptr_ulong %_arg_ptr
               OpStore %p %x Aligned 4

               OpReturn
               OpFunctionEnd
