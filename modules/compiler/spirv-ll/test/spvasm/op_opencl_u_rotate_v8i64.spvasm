; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a OpenCL -b 64 %spv_file_s | %filecheck %s
                        OpCapability Kernel
                        OpCapability Addresses
                        OpCapability Int64
                        OpCapability Vector16
                   %1 = OpExtInstImport "OpenCL.std"
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %u_rotate_v8i64 "u_rotate_v8i64"
                        OpSource OpenCL_C 102000

; All types, variables and constants
              %void_t = OpTypeVoid
               %i64_t = OpTypeInt 64 0
             %v8i64_t = OpTypeVector %i64_t 8
       %u_rotate_fn_t = OpTypeFunction %void_t
               %i64_2 = OpConstant %i64_t 2
               %i64_4 = OpConstant %i64_t 4
             %v8i64_2 = OpConstantComposite %v8i64_t %i64_2 %i64_2 %i64_2 %i64_2 %i64_2 %i64_2 %i64_2 %i64_2
             %v8i64_4 = OpConstantComposite %v8i64_t %i64_4 %i64_4 %i64_4 %i64_4 %i64_4 %i64_4 %i64_4 %i64_4

; All functions
      %u_rotate_v8i64 = OpFunction %void_t None %u_rotate_fn_t
; CHECK: define spir_kernel void @u_rotate_v8i64()
                   %2 = OpLabel
                   %3 = OpExtInst %v8i64_t %1 rotate %v8i64_2 %v8i64_4
; CHECK: {{%[a-zA-Z0-9]+}} = call spir_func <8 x i64> @_Z6rotateDv8_mS_(<8 x i64> <i64 2, i64 2, i64 2, i64 2, i64 2, i64 2, i64 2, i64 2>, <8 x i64> <i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4>)
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
