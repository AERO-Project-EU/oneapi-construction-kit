; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a OpenCL -b 64 %spv_file_s | %filecheck %s
                        OpCapability Kernel
                        OpCapability Addresses
                        OpCapability Vector16
                   %1 = OpExtInstImport "OpenCL.std"
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %sincos_v16float "sincos_v16float"
                        OpSource OpenCL_C 102000
                        OpName %in_cosval "in_cosval"

; All types, variables and constants
              %void_t = OpTypeVoid
             %float_t = OpTypeFloat 32
          %v16float_t = OpTypeVector %float_t 16
      %v16float_ptr_t = OpTypePointer CrossWorkgroup %v16float_t
         %sincos_fn_t = OpTypeFunction %void_t %v16float_ptr_t
             %float_1 = OpConstant %float_t 1.05
          %v16float_1 = OpConstantComposite %v16float_t %float_1 %float_1 %float_1 %float_1 %float_1 %float_1 %float_1 %float_1 %float_1 %float_1 %float_1 %float_1 %float_1 %float_1 %float_1 %float_1

; All functions
     %sincos_v16float = OpFunction %void_t None %sincos_fn_t
           %in_cosval = OpFunctionParameter %v16float_ptr_t
; CHECK: define spir_kernel void @sincos_v16float(ptr addrspace(1) %in_cosval)
                   %2 = OpLabel
                   %3 = OpExtInst %v16float_t %1 sincos %v16float_1 %in_cosval
; CHECK: {{%[a-zA-Z0-9]+}} = call spir_func <16 x float> @_Z6sincosDv16_fPU3AS1S_(<16 x float> <float 0x3FF0CCCCC0000000, float 0x3FF0CCCCC0000000, float 0x3FF0CCCCC0000000, float 0x3FF0CCCCC0000000, float 0x3FF0CCCCC0000000, float 0x3FF0CCCCC0000000, float 0x3FF0CCCCC0000000, float 0x3FF0CCCCC0000000, float 0x3FF0CCCCC0000000, float 0x3FF0CCCCC0000000, float 0x3FF0CCCCC0000000, float 0x3FF0CCCCC0000000, float 0x3FF0CCCCC0000000, float 0x3FF0CCCCC0000000, float 0x3FF0CCCCC0000000, float 0x3FF0CCCCC0000000>, ptr addrspace(1) %in_cosval)
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
