; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a OpenCL -b 32 -c Addresses %p/op_opencl_vstoren_float_32bit.spv | %filecheck %s
               OpCapability Addresses
               OpCapability Kernel
               OpCapability Vector16
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical32 OpenCL
               OpEntryPoint Kernel %7 "foo"
               OpSource OpenCL_C 102000
               OpName %out "out"
               OpName %loc "loc"
               OpName %entry "entry"
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
       %void = OpTypeVoid
      %float = OpTypeFloat 32
%_ptr_CrossWorkgroup_float = OpTypePointer CrossWorkgroup %float
%_ptr_Workgroup_float = OpTypePointer Workgroup %float
          %6 = OpTypeFunction %void %_ptr_CrossWorkgroup_float %_ptr_Workgroup_float
    %v2float = OpTypeVector %float 2
    %v3float = OpTypeVector %float 3
    %v4float = OpTypeVector %float 4
    %v8float = OpTypeVector %float 8
   %v16float = OpTypeVector %float 16
    %float_2 = OpConstant %float 2
         %13 = OpConstantComposite %v2float %float_2 %float_2
    %float_3 = OpConstant %float 3
         %19 = OpConstantComposite %v3float %float_3 %float_3 %float_3
    %float_4 = OpConstant %float 4
         %23 = OpConstantComposite %v4float %float_4 %float_4 %float_4 %float_4
    %float_8 = OpConstant %float 8
         %27 = OpConstantComposite %v8float %float_8 %float_8 %float_8 %float_8 %float_8 %float_8 %float_8 %float_8
   %float_16 = OpConstant %float 16
         %31 = OpConstantComposite %v16float %float_16 %float_16 %float_16 %float_16 %float_16 %float_16 %float_16 %float_16 %float_16 %float_16 %float_16 %float_16 %float_16 %float_16 %float_16 %float_16
          %7 = OpFunction %void None %6
        %out = OpFunctionParameter %_ptr_CrossWorkgroup_float
        %loc = OpFunctionParameter %_ptr_Workgroup_float
      %entry = OpLabel
         %16 = OpExtInst %void %1 vstoren %13 %uint_0 %out
; CHECK: call spir_func void @_Z7vstore2Dv2_fjPU3AS1f(<2 x float> <float 2.000000e+00, float 2.000000e+00>, i32 0, ptr addrspace(1) %out)
         %20 = OpExtInst %void %1 vstoren %19 %uint_0 %out
; CHECK: call spir_func void @_Z7vstore3Dv3_fjPU3AS1f(<3 x float> <float 3.000000e+00, float 3.000000e+00, float 3.000000e+00>, i32 0, ptr addrspace(1) %out)
         %24 = OpExtInst %void %1 vstoren %23 %uint_0 %out
; CHECK: call spir_func void @_Z7vstore4Dv4_fjPU3AS1f(<4 x float> <float 4.000000e+00, float 4.000000e+00, float 4.000000e+00, float 4.000000e+00>, i32 0, ptr addrspace(1) %out)
         %28 = OpExtInst %void %1 vstoren %27 %uint_0 %out
; CHECK: call spir_func void @_Z7vstore8Dv8_fjPU3AS1f(<8 x float> <float 8.000000e+00, float 8.000000e+00, float 8.000000e+00, float 8.000000e+00, float 8.000000e+00, float 8.000000e+00, float 8.000000e+00, float 8.000000e+00>, i32 0, ptr addrspace(1) %out)
         %32 = OpExtInst %void %1 vstoren %31 %uint_0 %out
; CHECK: call spir_func void @_Z8vstore16Dv16_fjPU3AS1f(<16 x float> <float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01>, i32 0, ptr addrspace(1) %out)
         %33 = OpExtInst %void %1 vstoren %13 %uint_0 %loc
; CHECK: call spir_func void @_Z7vstore2Dv2_fjPU3AS3f(<2 x float> <float 2.000000e+00, float 2.000000e+00>, i32 0, ptr addrspace(3) %loc)
         %34 = OpExtInst %void %1 vstoren %19 %uint_0 %loc
; CHECK: call spir_func void @_Z7vstore3Dv3_fjPU3AS3f(<3 x float> <float 3.000000e+00, float 3.000000e+00, float 3.000000e+00>, i32 0, ptr addrspace(3) %loc)
         %35 = OpExtInst %void %1 vstoren %23 %uint_0 %loc
; CHECK: call spir_func void @_Z7vstore4Dv4_fjPU3AS3f(<4 x float> <float 4.000000e+00, float 4.000000e+00, float 4.000000e+00, float 4.000000e+00>, i32 0, ptr addrspace(3) %loc)
         %36 = OpExtInst %void %1 vstoren %27 %uint_0 %loc
; CHECK: call spir_func void @_Z7vstore8Dv8_fjPU3AS3f(<8 x float> <float 8.000000e+00, float 8.000000e+00, float 8.000000e+00, float 8.000000e+00, float 8.000000e+00, float 8.000000e+00, float 8.000000e+00, float 8.000000e+00>, i32 0, ptr addrspace(3) %loc)
         %37 = OpExtInst %void %1 vstoren %31 %uint_0 %loc
; CHECK: call spir_func void @_Z8vstore16Dv16_fjPU3AS3f(<16 x float> <float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01, float 1.600000e+01>, i32 0, ptr addrspace(3) %loc)
               OpReturn
               OpFunctionEnd
