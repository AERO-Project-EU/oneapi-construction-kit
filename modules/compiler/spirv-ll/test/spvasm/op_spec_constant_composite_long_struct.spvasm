; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
; RUN: %spirv-ll -a Vulkan -c Float64 -c Int64 %p/op_spec_constant_composite_long_struct.spv -o %t
; RUN: %filecheck < %t %t.pp
; CHECK: ; ModuleID = '{{.*}}'
                            OpCapability Shader
                            OpCapability Float64
                            OpCapability Int64
                       %1 = OpExtInstImport "GLSL.std.450"
                            OpMemoryModel Logical GLSL450
                            OpEntryPoint GLCompute %main "main"
                            OpExecutionMode %main LocalSize 1 1 1
                            OpSource GLSL 450
                            OpName %main "main"
                            OpName %Foo "Foo"
                            OpMemberName %Foo 0 "a"
                            OpName %test_block "test_block"
                            OpMemberName %test_block 0 "test_out"
                            OpName %_ ""
                            OpMemberDecorate %Foo 0 Offset 0
                            OpMemberDecorate %test_block 0 Offset 0
                            OpDecorate %test_block BufferBlock
                            OpDecorate %_ DescriptorSet 0
                            OpDecorate %_ Binding 0
                            OpDecorate %12 SpecId 0
                    %void = OpTypeVoid
                       %3 = OpTypeFunction %void
                    %long = OpTypeInt 64 1
                %idx_type = OpTypeInt 32 0
                     %Foo = OpTypeStruct %long
              %test_block = OpTypeStruct %Foo
; CHECK: [[uniforms:%[a-zA-Z0-9_]+]] = type { [[uniformStruct:%[a-zA-Z0-9_]+]] }
; CHECK: [[uniformStruct]] = type { i64 }
 %_ptr_Uniform_test_block = OpTypePointer Uniform %test_block
                       %_ = OpVariable %_ptr_Uniform_test_block Uniform
                      %11 = OpConstant %idx_type 0
                      %12 = OpSpecConstant %long -4200000000
                      %14 = OpSpecConstantComposite %Foo %12 ; testing this
        %_ptr_Uniform_Foo = OpTypePointer Uniform %Foo
                    %main = OpFunction %void None %3
; CHECK-GE15: define spir_kernel void @main(ptr addrspace(1){{( %0)?}}, ptr addrspace(1){{( %1)?}})
; CHECK-LT15: define spir_kernel void @main([[uniforms]] addrspace(1)*{{( %0)?}}, i32 addrspace(1)*{{( %1)?}})
                       %5 = OpLabel
                      %16 = OpAccessChain %_ptr_Uniform_Foo %_ %11
; CHECK-GE15: [[uniformStructPointer:%[0-9]+]] = getelementptr [[uniforms]], ptr addrspace(1) %0, i32 0, i32 0
; CHECK-LT15: [[uniformStructPointer:%[0-9]+]] = getelementptr [[uniforms]], [[uniforms]] addrspace(1)* %0, i32 0, i32 0
                            OpStore %16 %14
; CHECK-GE15: store [[uniformStruct]] { i64 -4200000000 }, ptr addrspace(1) [[uniformStructPointer]]
; CHECK-LT15: store [[uniformStruct]] { i64 -4200000000 }, [[uniformStruct]] addrspace(1)* [[uniformStructPointer]]
                            OpReturn
; CHECK: ret void
                            OpFunctionEnd
; CHECK: }
