; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a OpenCL -b 64 %p/op_opencl_s_bitselect_v8i8.spv -o %t
; RUN: %filecheck < %t %s
                        OpCapability Kernel
                        OpCapability Addresses
                        OpCapability Int8
                        OpCapability Vector16
                   %1 = OpExtInstImport "OpenCL.std"
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %s_bitselect_v8i8 "s_bitselect_v8i8"
                        OpSource OpenCL_C 102000

; All types, variables and constants
              %void_t = OpTypeVoid
                %i8_t = OpTypeInt 8 1
              %v8i8_t = OpTypeVector %i8_t 8
    %s_bitselect_fn_t = OpTypeFunction %void_t
                %i8_1 = OpConstant %i8_t 1
                %i8_2 = OpConstant %i8_t 2
                %i8_3 = OpConstant %i8_t 3
              %v8i8_1 = OpConstantComposite %v8i8_t %i8_1 %i8_1 %i8_1 %i8_1 %i8_1 %i8_1 %i8_1 %i8_1
              %v8i8_2 = OpConstantComposite %v8i8_t %i8_2 %i8_2 %i8_2 %i8_2 %i8_2 %i8_2 %i8_2 %i8_2
              %v8i8_3 = OpConstantComposite %v8i8_t %i8_3 %i8_3 %i8_3 %i8_3 %i8_3 %i8_3 %i8_3 %i8_3

; All functions
    %s_bitselect_v8i8 = OpFunction %void_t None %s_bitselect_fn_t
; CHECK: define spir_kernel void @s_bitselect_v8i8()
                   %2 = OpLabel
                   %3 = OpExtInst %v8i8_t %1 bitselect %v8i8_1 %v8i8_2 %v8i8_3
; CHECK: {{%[a-zA-Z0-9]+}} = call spir_func <8 x i8> @_Z9bitselectDv8_cS_S_(<8 x i8> <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>, <8 x i8> <i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2>, <8 x i8> <i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3>)
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
