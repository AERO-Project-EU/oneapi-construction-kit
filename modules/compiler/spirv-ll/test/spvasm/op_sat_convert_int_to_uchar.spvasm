; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a OpenCL -b 64 %p/op_sat_convert_int_to_uchar.spv | %filecheck %s

                OpCapability Kernel
                OpCapability Addresses
                OpCapability Int8
                OpMemoryModel Physical64 OpenCL
                OpEntryPoint Kernel %main "main"
                OpSource OpenCL_C 102000
                OpName %main "main"
                OpName %a "a"
                OpName %b "b"
        %void = OpTypeVoid
      %main_t = OpTypeFunction %void
         %int = OpTypeInt 32 0
        %char = OpTypeInt 8 0
     %ptr_int = OpTypePointer Function %int
    %ptr_char = OpTypePointer Function %char
  %const_1024 = OpConstant %int 1024

        %main = OpFunction %void None %main_t
; CHECK: define spir_kernel void @main()
       %label = OpLabel
           %a = OpVariable %ptr_int Function
; CHECK: [[a:%[-a-zA-Z$._0-9][-a-zA-Z$._0-9]*]] = alloca i32
           %b = OpVariable %ptr_char Function
; CHECK: [[b:%[-a-zA-Z$._0-9][-a-zA-Z$._0-9]*]] = alloca i8
                OpStore %a %const_1024
; CHECK: store i32 1024, ptr [[a]]
       %a_val = OpLoad %int %a
; CHECK: [[a_val:%[0-9]+]] = load i32, ptr [[a]]
       %b_val = OpSatConvertSToU %char %a_val
; CHECK: [[b_val:%[-a-zA-Z$._0-9][-a-zA-Z$._0-9]*]] = call spir_func zeroext i8 @_Z17convert_uchar_sati(i32 [[a_val]])
                OpStore %b %b_val
; CHECK: store i8 [[b_val]], ptr [[b]]
                OpReturn
                OpFunctionEnd
; CHECK: ret void
