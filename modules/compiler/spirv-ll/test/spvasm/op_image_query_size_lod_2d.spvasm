; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: spirv-ll-tool -a OpenCL -b 64 -c SampledBuffer %spv_file_s | FileCheck %s
                        OpCapability Kernel
                        OpCapability Addresses
                        OpCapability SampledBuffer
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %image2d "image2d"
                        OpSource OpenCL_C 102000
                        OpName %image "image"

; All types, variables and constants
              %void_t = OpTypeVoid
               %int_t = OpTypeInt 32 1
             %v2int_t = OpTypeVector %int_t 2
        %image2d_t = OpTypeImage %void_t 2D 0 0 0 0 Unknown ReadOnly
     %query_size_fn_t = OpTypeFunction %void_t %image2d_t
               %int_1 = OpConstant %int_t 1

; All functions
             %image2d = OpFunction %void_t None %query_size_fn_t
               %image = OpFunctionParameter %image2d_t
; CHECK: define spir_kernel void @image2d(ptr addrspace(1) %image)
                   %1 = OpLabel
                   %2 = OpImageQuerySizeLod %v2int_t %image %int_1
; CHECK: [[width_result:%[a-zA-Z0-9]+]] = call spir_func i32 @_Z15get_image_width11ocl_image2d(ptr addrspace(1) %image)
; CHECK: [[v2int_idx_0:%[a-zA-Z0-9]+]] = insertelement <2 x i32> undef, i32 [[width_result]], i32 0
; CHECK: [[height_result:%[a-zA-Z0-9]+]] = call spir_func i32 @_Z16get_image_height11ocl_image2d(ptr addrspace(1) %image)
; CHECK: [[v2int_idx_1:%[a-zA-Z0-9]+]] = insertelement <2 x i32> [[v2int_idx_0]], i32 [[height_result]], i32 1
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
