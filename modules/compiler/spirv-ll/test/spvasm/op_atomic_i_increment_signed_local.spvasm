; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a Vulkan %p/op_atomic_i_increment_signed_local.spv | %filecheck %s
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %1 "test"
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
%_ptr_Workgroup_int = OpTypePointer Workgroup %int
       %void = OpTypeVoid
          %6 = OpTypeFunction %void
      %int_0 = OpConstant %int 0
     %uint_1 = OpConstant %uint 1
    %uint_80 = OpConstant %uint 80
          %2 = OpVariable %_ptr_Workgroup_int Workgroup %int_0
          %1 = OpFunction %void None %6
         %10 = OpLabel
         %11 = OpAtomicIIncrement %int %2 %uint_1 %uint_80
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: @0 = internal addrspace(3) global i32 0
; CHECK: define spir_kernel void @test() {
; CHECK: {{%[a-zA-Z0-9_]+}} = call spir_func i32 @_Z10atomic_incPU3AS3Vi(ptr addrspace(3) @0)
; CHECK: ret void
; CHECK: declare spir_func i32 @_Z10atomic_incPU3AS3Vi(ptr addrspace(3))
