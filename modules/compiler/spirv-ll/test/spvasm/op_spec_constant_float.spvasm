; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a Vulkan -c Float64 -c Int64 %spv_file_s | %filecheck %s
            OpCapability Shader
            OpCapability Float64
            OpCapability Int64
       %1 = OpExtInstImport "GLSL.std.450"
            OpMemoryModel Logical GLSL450
            OpEntryPoint GLCompute %main "main"
            OpExecutionMode %main LocalSize 1 1 1
            OpSource GLSL 450
            OpName %main "main"
            OpName %a_block "a_block"
               OpMemberName %a_block 0 "test_out"
               OpName %_ ""
               OpMemberDecorate %a_block 0 Offset 0
               OpDecorate %a_block BufferBlock
               OpDecorate %_ DescriptorSet 0
               OpDecorate %_ Binding 0
               OpDecorate %11 SpecId 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
        %float = OpTypeFloat 32
   %idx_type = OpTypeInt 32 0
    %a_block = OpTypeStruct %float
%ptr_Uniform_block = OpTypePointer Uniform %a_block
          %_ = OpVariable %ptr_Uniform_block Uniform
         %10 = OpConstant %idx_type 0
         %11 = OpSpecConstant %float 42.42 ; testing this
%ptr_Uniform_float = OpTypePointer Uniform %float
       %main = OpFunction %void None %3
          %5 = OpLabel
         %13 = OpAccessChain %ptr_Uniform_float %_ %10
               OpStore %13 %11
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: [[a_block:%[a-zA-Z0-9_]+]] = type { float }
; CHECK: define spir_kernel void @main(ptr addrspace(1){{( %0)?}}, ptr addrspace(1){{( %1)?}})
; CHECK: [[anon:%[a-zA-Z0-9]+]] = getelementptr [[a_block]], ptr addrspace(1) {{%[a-zA-Z0-9]+}}, i32 0, i32 0
; CHECK: store float 0x404535C280000000, ptr addrspace({{[0-9]}}) [[anon]]
; CHECK: ret void
