; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %spirv-ll -a Vulkan -c Float64 -c Int64 %spv_file_s | %filecheck %s
            OpCapability Shader
            OpCapability Float64
            OpCapability Int64
       %1 = OpExtInstImport "GLSL.std.450"
            OpMemoryModel Logical GLSL450
            OpEntryPoint GLCompute %main "main"
            OpExecutionMode %main LocalSize 1 1 1
            OpSource GLSL 450
            OpName %main "main"
            OpName %res "res"
            OpName %test "test"
            OpName %const "const"
            OpDecorate %test SpecId 0
    %void = OpTypeVoid
       %3 = OpTypeFunction %void
  %double = OpTypeFloat 64
%ptr_double = OpTypePointer Function %double
    %test = OpSpecConstant %double -42.42
   %const = OpConstant %double -42.42
      %11 = OpSpecConstantOp %double FMod %test %const
    %main = OpFunction %void None %3
       %5 = OpLabel
     %res = OpVariable %ptr_double Function
            OpStore %res %11
            OpReturn
            OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: define spir_kernel void @main() {
; CHECK: [[MOD:%[a-zA-Z0-9_]+]] = call spir_func double @_Z4fmoddd(double -4.242000e+01, double -4.242000e+01)
; CHECK: [[SPEC:%[a-zA-Z0-9_]+]] = call spir_func double @_Z8copysigndd(double [[MOD]], double -4.242000e+01)
; CHECK: br label {{%[a-zA-Z0-9_]+}}
; CHECK: [[RES:%[a-zA-Z0-9_]+]] = alloca double
; CHECK: store double [[SPEC]], ptr [[RES]]
; CHECK: ret void
; CHECK: declare spir_func double @_Z4fmoddd(double, double)
; CHECK: declare spir_func double @_Z8copysigndd(double, double)
