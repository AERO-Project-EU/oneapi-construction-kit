; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a OpenCL -b 32 -c Addresses %p/op_opencl_vstoren_short_32bit.spv | %filecheck %s
               OpCapability Addresses
               OpCapability Kernel
               OpCapability Vector16
               OpCapability Int16
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical32 OpenCL
               OpEntryPoint Kernel %7 "foo"
               OpSource OpenCL_C 102000
               OpName %out "out"
               OpName %loc "loc"
               OpName %entry "entry"
     %ushort = OpTypeInt 16 0
       %uint = OpTypeInt 32 0
   %ushort_2 = OpConstant %ushort 2
     %uint_0 = OpConstant %uint 0
   %ushort_3 = OpConstant %ushort 3
   %ushort_4 = OpConstant %ushort 4
   %ushort_8 = OpConstant %ushort 8
  %ushort_16 = OpConstant %ushort 16
       %void = OpTypeVoid
%_ptr_CrossWorkgroup_ushort = OpTypePointer CrossWorkgroup %ushort
%_ptr_Workgroup_ushort = OpTypePointer Workgroup %ushort
          %6 = OpTypeFunction %void %_ptr_CrossWorkgroup_ushort %_ptr_Workgroup_ushort
   %v2ushort = OpTypeVector %ushort 2
   %v3ushort = OpTypeVector %ushort 3
   %v4ushort = OpTypeVector %ushort 4
   %v8ushort = OpTypeVector %ushort 8
  %v16ushort = OpTypeVector %ushort 16
         %13 = OpConstantComposite %v2ushort %ushort_2 %ushort_2
         %19 = OpConstantComposite %v3ushort %ushort_3 %ushort_3 %ushort_3
         %23 = OpConstantComposite %v4ushort %ushort_4 %ushort_4 %ushort_4 %ushort_4
         %27 = OpConstantComposite %v8ushort %ushort_8 %ushort_8 %ushort_8 %ushort_8 %ushort_8 %ushort_8 %ushort_8 %ushort_8
         %31 = OpConstantComposite %v16ushort %ushort_16 %ushort_16 %ushort_16 %ushort_16 %ushort_16 %ushort_16 %ushort_16 %ushort_16 %ushort_16 %ushort_16 %ushort_16 %ushort_16 %ushort_16 %ushort_16 %ushort_16 %ushort_16
          %7 = OpFunction %void None %6
        %out = OpFunctionParameter %_ptr_CrossWorkgroup_ushort
        %loc = OpFunctionParameter %_ptr_Workgroup_ushort
      %entry = OpLabel
         %16 = OpExtInst %void %1 vstoren %13 %uint_0 %out
; CHECK: call spir_func void @_Z7vstore2Dv2_tjPU3AS1t(<2 x i16> <i16 2, i16 2>, i32 0, ptr addrspace(1) %out)
         %20 = OpExtInst %void %1 vstoren %19 %uint_0 %out
; CHECK: call spir_func void @_Z7vstore3Dv3_tjPU3AS1t(<3 x i16> <i16 3, i16 3, i16 3>, i32 0, ptr addrspace(1) %out)
         %24 = OpExtInst %void %1 vstoren %23 %uint_0 %out
; CHECK: call spir_func void @_Z7vstore4Dv4_tjPU3AS1t(<4 x i16> <i16 4, i16 4, i16 4, i16 4>, i32 0, ptr addrspace(1) %out)
         %28 = OpExtInst %void %1 vstoren %27 %uint_0 %out
; CHECK: call spir_func void @_Z7vstore8Dv8_tjPU3AS1t(<8 x i16> <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>, i32 0, ptr addrspace(1) %out)
         %32 = OpExtInst %void %1 vstoren %31 %uint_0 %out
; CHECK: call spir_func void @_Z8vstore16Dv16_tjPU3AS1t(<16 x i16> <i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16>, i32 0, ptr addrspace(1) %out)
         %33 = OpExtInst %void %1 vstoren %13 %uint_0 %loc
; CHECK: call spir_func void @_Z7vstore2Dv2_tjPU3AS3t(<2 x i16> <i16 2, i16 2>, i32 0, ptr addrspace(3) %loc)
         %34 = OpExtInst %void %1 vstoren %19 %uint_0 %loc
; CHECK: call spir_func void @_Z7vstore3Dv3_tjPU3AS3t(<3 x i16> <i16 3, i16 3, i16 3>, i32 0, ptr addrspace(3) %loc)
         %35 = OpExtInst %void %1 vstoren %23 %uint_0 %loc
; CHECK: call spir_func void @_Z7vstore4Dv4_tjPU3AS3t(<4 x i16> <i16 4, i16 4, i16 4, i16 4>, i32 0, ptr addrspace(3) %loc)
         %36 = OpExtInst %void %1 vstoren %27 %uint_0 %loc
; CHECK: call spir_func void @_Z7vstore8Dv8_tjPU3AS3t(<8 x i16> <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>, i32 0, ptr addrspace(3) %loc)
         %37 = OpExtInst %void %1 vstoren %31 %uint_0 %loc
; CHECK: call spir_func void @_Z8vstore16Dv16_tjPU3AS3t(<16 x i16> <i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16>, i32 0, ptr addrspace(3) %loc)
               OpReturn
               OpFunctionEnd
