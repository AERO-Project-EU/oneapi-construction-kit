; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a OpenCL -b 64 %spv_file_s | %filecheck %s
                        OpCapability Kernel
                        OpCapability Addresses
                        OpCapability Vector16
                   %1 = OpExtInstImport "OpenCL.std"
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %s_shuffle_v16i32 "s_shuffle_v16i32"
                        OpSource OpenCL_C 102000

; All types, variables and constants
              %void_t = OpTypeVoid
              %ui32_t = OpTypeInt 32 0
               %i32_t = OpTypeInt 32 1
           %v16ui32_t = OpTypeVector %ui32_t 16
            %v16i32_t = OpTypeVector %i32_t 16
      %s_shuffle_fn_t = OpTypeFunction %void_t
               %i32_3 = OpConstant %i32_t 3
              %ui32_4 = OpConstant %ui32_t 4
            %v16i32_3 = OpConstantComposite %v16i32_t %i32_3 %i32_3 %i32_3 %i32_3 %i32_3 %i32_3 %i32_3 %i32_3 %i32_3 %i32_3 %i32_3 %i32_3 %i32_3 %i32_3 %i32_3 %i32_3
           %v16ui32_4 = OpConstantComposite %v16ui32_t %ui32_4 %ui32_4 %ui32_4 %ui32_4 %ui32_4 %ui32_4 %ui32_4 %ui32_4 %ui32_4 %ui32_4 %ui32_4 %ui32_4 %ui32_4 %ui32_4 %ui32_4 %ui32_4

; All functions
    %s_shuffle_v16i32 = OpFunction %void_t None %s_shuffle_fn_t
; CHECK: define spir_kernel void @s_shuffle_v16i32()
                   %2 = OpLabel
                   %3 = OpExtInst %v16i32_t %1 shuffle %v16i32_3 %v16ui32_4
; CHECK: {{%[a-zA-Z0-9]+}} = call spir_func <16 x i32> @_Z7shuffleDv16_iDv16_j(<16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>, <16 x i32> <i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4>)
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
