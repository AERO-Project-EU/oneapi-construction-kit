; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %spirv-ll -a Vulkan -c Float64 -c Int64 %spv_file_s | %filecheck %s
            OpCapability Shader
            OpCapability Float64
            OpCapability Int64
       %1 = OpExtInstImport "GLSL.std.450"
            OpMemoryModel Logical GLSL450
            OpEntryPoint GLCompute %main "main"
            OpExecutionMode %main LocalSize 1 1 1
            OpSource GLSL 450
            OpName %main "main"
            OpName %Foo "Foo"
               OpMemberName %Foo 0 "a"
               OpName %test_block "test_block"
               OpMemberName %test_block 0 "test_out"
               OpName %_ ""
               OpMemberDecorate %Foo 0 Offset 0
               OpMemberDecorate %test_block 0 Offset 0
               OpDecorate %test_block BufferBlock
               OpDecorate %_ DescriptorSet 0
               OpDecorate %_ Binding 0
               OpDecorate %12 SpecId 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
        %double = OpTypeFloat 64
   %idx_type = OpTypeInt 32 0
        %Foo = OpTypeStruct %double
 %test_block = OpTypeStruct %Foo
%_ptr_Uniform_test_block = OpTypePointer Uniform %test_block
          %_ = OpVariable %_ptr_Uniform_test_block Uniform
         %11 = OpConstant %idx_type 0
         %12 = OpSpecConstant %double -42.42
         %14 = OpSpecConstantComposite %Foo %12 ; testing this
%_ptr_Uniform_Foo = OpTypePointer Uniform %Foo
       %main = OpFunction %void None %3
          %5 = OpLabel
         %16 = OpAccessChain %_ptr_Uniform_Foo %_ %11
               OpStore %16 %14
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = type { {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} }
; CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = type { double }
; CHECK: define spir_kernel void @main(ptr addrspace(1){{( %0)?}}, ptr addrspace(1){{( %1)?}})
; CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = getelementptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, ptr addrspace(1) {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, i32 0, i32 0
; CHECK: store {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} { double {{(-?[0-9]+\.[0-9]+e\+[0-9]+|0x[0-9A-F]+)}} }, ptr addrspace({{[0-9]}}) {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
; CHECK: ret void
