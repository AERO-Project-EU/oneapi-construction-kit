; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a Vulkan -c Float64 -c Int64 %spv_file_s | %filecheck %s
            OpCapability Shader
            OpCapability Float64
            OpCapability Int64
       %1 = OpExtInstImport "GLSL.std.450"
            OpMemoryModel Logical GLSL450
            OpEntryPoint GLCompute %main "main"
            OpExecutionMode %main LocalSize 1 1 1
            OpSource GLSL 450
            OpName %main "main"
            OpName %test_block "test_block"
               OpMemberName %test_block 0 "test_out"
               OpName %_ ""
               OpMemberDecorate %test_block 0 Offset 0
               OpDecorate %test_block BufferBlock
               OpDecorate %_ DescriptorSet 0
               OpDecorate %_ Binding 0
               OpDecorate %14 SpecId 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
        %uint = OpTypeInt 32 0
   %idx_type = OpTypeInt 32 0
          %8 = OpConstant %idx_type 4
    %arr_uint = OpTypeArray %uint %8
 %test_block = OpTypeStruct %arr_uint
%_ptr_Uniform_test_block = OpTypePointer Uniform %test_block
          %_ = OpVariable %_ptr_Uniform_test_block Uniform
         %13 = OpConstant %idx_type 0
         %14 = OpSpecConstant %uint 42
         %15 = OpSpecConstantComposite %arr_uint %14 %14 %14 %14 ; testing this
%ptr_arr_uint = OpTypePointer Uniform %arr_uint
       %main = OpFunction %void None %3
          %5 = OpLabel
         %17 = OpAccessChain %ptr_arr_uint %_ %13
               OpStore %17 %15
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: [[test_block:%[a-zA-Z0-9_]+]] = type { [4 x i32] }
; CHECK: define spir_kernel void @main(ptr addrspace(1){{( %0)?}}, ptr addrspace(1){{( %1)?}})
; CHECK: [[uniformArray:%[a-zA-Z0-9_]+]] = getelementptr [[test_block]], ptr addrspace(1) {{%[a-zA-Z0-9]+}}, i32 0, i32 0
; CHECK: store [4 x i32] [i32 42, i32 42, i32 42, i32 42], ptr addrspace(1) [[uniformArray]]
; CHECK: ret void
