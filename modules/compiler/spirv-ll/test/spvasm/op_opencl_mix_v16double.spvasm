; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a OpenCL -b 64 -c Float64 %spv_file_s | %filecheck %s
                        OpCapability Kernel
                        OpCapability Addresses
                        OpCapability Float64
                        OpCapability Vector16
                   %1 = OpExtInstImport "OpenCL.std"
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %mix_v16double "mix_v16double"
                        OpSource OpenCL_C 102000

; All types, variables and constants
              %void_t = OpTypeVoid
            %double_t = OpTypeFloat 64
         %v16double_t = OpTypeVector %double_t 16
            %mix_fn_t = OpTypeFunction %void_t
            %double_1 = OpConstant %double_t 1.1
            %double_2 = OpConstant %double_t 2.2
            %double_3 = OpConstant %double_t 3.3
         %v16double_1 = OpConstantComposite %v16double_t %double_1 %double_1 %double_1 %double_1 %double_1 %double_1 %double_1 %double_1 %double_1 %double_1 %double_1 %double_1 %double_1 %double_1 %double_1 %double_1
         %v16double_2 = OpConstantComposite %v16double_t %double_2 %double_2 %double_2 %double_2 %double_2 %double_2 %double_2 %double_2 %double_2 %double_2 %double_2 %double_2 %double_2 %double_2 %double_2 %double_2
         %v16double_3 = OpConstantComposite %v16double_t %double_3 %double_3 %double_3 %double_3 %double_3 %double_3 %double_3 %double_3 %double_3 %double_3 %double_3 %double_3 %double_3 %double_3 %double_3 %double_3

; All functions
       %mix_v16double = OpFunction %void_t None %mix_fn_t
; CHECK: define spir_kernel void @mix_v16double()
                   %2 = OpLabel
                   %3 = OpExtInst %v16double_t %1 mix %v16double_1 %v16double_2 %v16double_3
; CHECK: {{%[a-zA-Z0-9]+}} = call spir_func <16 x double> @_Z3mixDv16_dS_S_(<16 x double> <double 1.100000e+00, double 1.100000e+00, double 1.100000e+00, double 1.100000e+00, double 1.100000e+00, double 1.100000e+00, double 1.100000e+00, double 1.100000e+00, double 1.100000e+00, double 1.100000e+00, double 1.100000e+00, double 1.100000e+00, double 1.100000e+00, double 1.100000e+00, double 1.100000e+00, double 1.100000e+00>, <16 x double> <double 2.200000e+00, double 2.200000e+00, double 2.200000e+00, double 2.200000e+00, double 2.200000e+00, double 2.200000e+00, double 2.200000e+00, double 2.200000e+00, double 2.200000e+00, double 2.200000e+00, double 2.200000e+00, double 2.200000e+00, double 2.200000e+00, double 2.200000e+00, double 2.200000e+00, double 2.200000e+00>, <16 x double> <double 3.300000e+00, double 3.300000e+00, double 3.300000e+00, double 3.300000e+00, double 3.300000e+00, double 3.300000e+00, double 3.300000e+00, double 3.300000e+00, double 3.300000e+00, double 3.300000e+00, double 3.300000e+00, double 3.300000e+00, double 3.300000e+00, double 3.300000e+00, double 3.300000e+00, double 3.300000e+00>)
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
