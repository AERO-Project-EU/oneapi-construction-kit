; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; REQUIRES: arm
; RUN: %spirv-ll -a Vulkan -c Float64 -c Int64 %spv_file_s | %filecheck %s
            OpCapability Shader
            OpCapability Float64
            OpCapability Int64
       %1 = OpExtInstImport "GLSL.std.450"
            OpMemoryModel Logical GLSL450
            OpEntryPoint GLCompute %main "main"
            OpExecutionMode %main LocalSize 1 1 1
            OpSource GLSL 450
            OpName %main "main"
            OpName %a "a"
               OpName %b "b"
               OpName %res "res"
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
        %float = OpTypeFloat 32
%ptr_float = OpTypePointer Function %float
          %9 = OpConstant %float 42.42
         %11 = OpConstant %float 42.42
       %main = OpFunction %void None %3
          %5 = OpLabel
          %a = OpVariable %ptr_float Function
          %b = OpVariable %ptr_float Function
        %res = OpVariable %ptr_float Function
               OpStore %a %9
               OpStore %b %11
         %13 = OpLoad %float %a
         %14 = OpLoad %float %b
         %15 = OpFRem %float %13 %14 ; testing this
               OpStore %res %15
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = alloca float
; CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = alloca float
; CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = alloca float
; CHECK: store float {{(-?[0-9]+\.[0-9]+e\+[0-9]+|0x[0-9A-F]+)}}, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
; CHECK: store float {{(-?[0-9]+\.[0-9]+e\+[0-9]+|0x[0-9A-F]+)}}, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
; CHECK: [[a:%[a-zA-Z0-9_]+]] = load float, ptr %a
; CHECK: [[b:%[a-zA-Z0-9_]+]] = load float, ptr %b
; CHECK: [[mod:%[a-zA-Z0-9_]+]] = call spir_func float @_Z4fmodff(float [[a]], float [[b]])
; CHECK: store float {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
; CHECK: ret void
