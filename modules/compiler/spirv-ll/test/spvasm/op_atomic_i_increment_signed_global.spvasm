; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
; RUN: %spirv-ll -a Vulkan %p/op_atomic_i_increment_signed_global.spv -o %t
; RUN: %filecheck < %t %t.pp
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %1 "test"
               OpDecorate %2 DescriptorSet 0
               OpDecorate %2 Binding 0
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
%_ptr_Uniform_int = OpTypePointer Uniform %int
       %void = OpTypeVoid
          %6 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
    %uint_80 = OpConstant %uint 80
          %2 = OpVariable %_ptr_Uniform_int Uniform
          %1 = OpFunction %void None %6
         %10 = OpLabel
         %11 = OpAtomicIIncrement %int %2 %uint_1 %uint_80
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK-GE15: define spir_kernel void @test(ptr addrspace(1){{( %0)?}}, ptr addrspace(1){{( %1)?}}) {
; CHECK-LT15: define spir_kernel void @test(i32 addrspace(1)*{{( %0)?}}, i32 addrspace(1)*{{( %1)?}}) {
; CHECK-GE15: {{%[a-zA-Z0-9_]+}} = call spir_func i32 @_Z10atomic_incPU3AS1Vi(ptr addrspace(1) {{%[a-zA-Z0-9_]+}})
; CHECK-LT15: {{%[a-zA-Z0-9_]+}} = call spir_func i32 @_Z10atomic_incPU3AS1Vi(i32 addrspace(1)* {{%[a-zA-Z0-9_]+}})
; CHECK: ret void
; CHECK-GE15: declare spir_func i32 @_Z10atomic_incPU3AS1Vi(ptr addrspace(1))
; CHECK-LT15: declare spir_func i32 @_Z10atomic_incPU3AS1Vi(i32 addrspace(1)*)
