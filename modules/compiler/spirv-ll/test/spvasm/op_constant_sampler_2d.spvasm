; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a OpenCL -b 64 -c Sampled1D -c LiteralSampler %spv_file_s | %filecheck %s
                      OpCapability Kernel
                      OpCapability Addresses
                      OpCapability Sampled1D
                      OpCapability LiteralSampler
                      OpMemoryModel Physical64 OpenCL
                      OpEntryPoint Kernel %constant_sampler "constant_sampler"
                      OpSource OpenCL_C 102000
                      OpName %in_image "in_image"

            %void_t = OpTypeVoid
             %int_t = OpTypeInt 32 1
            %uint_t = OpTypeInt 32 0
           %float_t = OpTypeFloat 32
          %v2uint_t = OpTypeVector %uint_t 2
          %v4uint_t = OpTypeVector %uint_t 4
         %v2float_t = OpTypeVector %float_t 2
         %v4float_t = OpTypeVector %float_t 4
      %image2d_ro_t = OpTypeImage %void_t 2D 0 0 0 0 Unknown ReadOnly
      %sampler_fn_t = OpTypeFunction %void_t %image2d_ro_t
   %sampled_image_t = OpTypeSampledImage %image2d_ro_t
         %sampler_t = OpTypeSampler
     %const_sampler = OpConstantSampler %sampler_t None 0 Nearest
             %int_1 = OpConstant %uint_t 1
           %float_1 = OpConstant %float_t 1
           %v2int_1 = OpConstantComposite %v2uint_t %int_1 %int_1
         %v2float_1 = OpConstantComposite %v2float_t %float_1 %float_1

  %constant_sampler = OpFunction %void_t None %sampler_fn_t
          %in_image = OpFunctionParameter %image2d_ro_t
; CHECK: define spir_kernel void @constant_sampler(ptr addrspace(1) %in_image)
                 %1 = OpLabel
     %sampled_image = OpSampledImage %sampled_image_t %in_image %const_sampler
                 %2 = OpImageSampleExplicitLod %v4float_t %sampled_image %v2float_1 None
; CHECK: {{%[a-zA-Z0-9]+}} = call spir_func <4 x float> @_Z11read_imagef11ocl_image2d11ocl_samplerDv2_f(ptr addrspace(1) %in_image, i32 16, <2 x float> <float 1.000000e+00, float 1.000000e+00>)
                 %3 = OpImageSampleExplicitLod %v4float_t %sampled_image %v2int_1 None
; CHECK: {{%[a-zA-Z0-9]+}} = call spir_func <4 x float> @_Z11read_imagef11ocl_image2d11ocl_samplerDv2_i(ptr addrspace(1) %in_image, i32 16, <2 x i32> <i32 1, i32 1>)
                 %6 = OpImageSampleExplicitLod %v4uint_t %sampled_image %v2float_1 None
; CHECK: {{%[a-zA-Z0-9]+}} = call spir_func <4 x i32> @_Z12read_imageui11ocl_image2d11ocl_samplerDv2_f(ptr addrspace(1) %in_image, i32 16, <2 x float> <float 1.000000e+00, float 1.000000e+00>)
                 %7 = OpImageSampleExplicitLod %v4uint_t %sampled_image %v2int_1 None
; CHECK: {{%[a-zA-Z0-9]+}} = call spir_func <4 x i32> @_Z12read_imageui11ocl_image2d11ocl_samplerDv2_i(ptr addrspace(1) %in_image, i32 16, <2 x i32> <i32 1, i32 1>)
                      OpReturn
; CHECK: ret void
                      OpFunctionEnd
; CHECK: }
