; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a Vulkan -c Float64 -c Int64 %spv_file_s | %filecheck %s
; CHECK: ; ModuleID = '{{.*}}'
                            OpCapability Shader
                            OpCapability Float64
                            OpCapability Int64
                       %1 = OpExtInstImport "GLSL.std.450"
                            OpMemoryModel Logical GLSL450
                            OpEntryPoint GLCompute %main "main"
                            OpExecutionMode %main LocalSize 1 1 1
                            OpSource GLSL 450
                            OpName %main "main"
                            OpName %test_block "test_block"
                            OpMemberName %test_block 0 "test_out"
                            OpName %_ ""
                            OpMemberDecorate %test_block 0 Offset 0
                            OpDecorate %test_block BufferBlock
                            OpDecorate %_ DescriptorSet 0
                            OpDecorate %_ Binding 0
                            OpDecorate %12 SpecId 0
                    %void = OpTypeVoid
                       %3 = OpTypeFunction %void
                %idx_type = OpTypeInt 32 0
                    %long = OpTypeInt 64 1
                %vec_long = OpTypeVector %long 3
              %test_block = OpTypeStruct %vec_long
; CHECK: [[uniforms:%[a-zA-Z0-9_]+]] = type { <3 x i64> }
 %_ptr_Uniform_test_block = OpTypePointer Uniform %test_block
                       %_ = OpVariable %_ptr_Uniform_test_block Uniform
                      %11 = OpConstant %idx_type 0
                      %12 = OpSpecConstant %long -4200000000
                      %13 = OpSpecConstantComposite %vec_long %12 %12 %12  ; testing this
            %ptr_vec_long = OpTypePointer Uniform %vec_long
                    %main = OpFunction %void None %3
; CHECK: define spir_kernel void @main(ptr addrspace(1){{( %0)?}}, ptr addrspace(1){{( %1)?}})
                       %5 = OpLabel
                      %15 = OpAccessChain %ptr_vec_long %_ %11
; CHECK: [[uniformVecPointer:%[0-9]+]] = getelementptr [[uniforms]], ptr addrspace(1) {{%[a-zA-Z0-9]+}}, i32 0, i32 0
                            OpStore %15 %13
; CHECK: store <3 x i64> <i64 -4200000000, i64 -4200000000, i64 -4200000000>, ptr addrspace(1) [[uniformVecPointer]]
                            OpReturn
; CHECK: ret void
                            OpFunctionEnd
; CHECK: }
