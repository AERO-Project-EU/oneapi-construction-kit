; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: spirv-ll-tool -a OpenCL -b 64 %spv_file_s | FileCheck %s
                        OpCapability Kernel
                        OpCapability Addresses
                        OpCapability Int16
                   %1 = OpExtInstImport "OpenCL.std"
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %s_shuffle_v4i16 "s_shuffle_v4i16"
                        OpSource OpenCL_C 102000

; All types, variables and constants
              %void_t = OpTypeVoid
              %ui16_t = OpTypeInt 16 0
               %i16_t = OpTypeInt 16 1
            %v4ui16_t = OpTypeVector %ui16_t 4
             %v4i16_t = OpTypeVector %i16_t 4
      %s_shuffle_fn_t = OpTypeFunction %void_t
               %i16_3 = OpConstant %i16_t 3
              %ui16_4 = OpConstant %ui16_t 4
             %v4i16_3 = OpConstantComposite %v4i16_t %i16_3 %i16_3 %i16_3 %i16_3
            %v4ui16_4 = OpConstantComposite %v4ui16_t %ui16_4 %ui16_4 %ui16_4 %ui16_4

; All functions
     %s_shuffle_v4i16 = OpFunction %void_t None %s_shuffle_fn_t
; CHECK: define spir_kernel void @s_shuffle_v4i16()
                   %2 = OpLabel
                   %3 = OpExtInst %v4i16_t %1 shuffle %v4i16_3 %v4ui16_4
; CHECK: {{%[a-zA-Z0-9]+}} = call spir_func <4 x i16> @_Z7shuffleDv4_sDv4_t(<4 x i16> <i16 3, i16 3, i16 3, i16 3>, <4 x i16> <i16 4, i16 4, i16 4, i16 4>)
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
