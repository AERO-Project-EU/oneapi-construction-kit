; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a Vulkan -c Float64 -c Int64 %spv_file_s | %filecheck %s
            OpCapability Shader
            OpCapability Float64
            OpCapability Int64
       %1 = OpExtInstImport "GLSL.std.450"
            OpMemoryModel Logical GLSL450
            OpEntryPoint GLCompute %main "main"
            OpExecutionMode %main LocalSize 1 1 1
            OpSource GLSL 450
            OpName %main "main"
            OpName %cond "cond"
               OpName %a "a"
               OpName %res "res"
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
       %bool = OpTypeBool
%_ptr_Function_bool = OpTypePointer Function %bool
          %9 = OpConstantFalse %bool
        %int = OpTypeInt 32 1
%_ptr_Function_int = OpTypePointer Function %int
         %13 = OpConstant %int 0
         %17 = OpConstant %int 24
         %19 = OpConstant %int 42
       %main = OpFunction %void None %3
          %5 = OpLabel
       %cond = OpVariable %_ptr_Function_bool Function
          %a = OpVariable %_ptr_Function_int Function
        %res = OpVariable %_ptr_Function_int Function
               OpStore %cond %9
               OpStore %a %13
         %14 = OpLoad %bool %cond
               OpSelectionMerge %16 None
               OpBranchConditional %14 %15 %18 ; testing this
         %15 = OpLabel
               OpStore %a %17
               OpBranch %16
         %18 = OpLabel
               OpStore %a %19
               OpBranch %16
         %16 = OpLabel
         %21 = OpLoad %int %a
         %22 = OpBitwiseXor %int %21 %19
               OpStore %res %22
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: define spir_kernel void @main()
; CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = alloca i1
; CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = alloca i32
; CHECK: store i1 false, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
; CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = load i1, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
; CHECK: br i1 {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, label {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, label {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
; CHECK: {{[0-9]+:}}
; CHECK: store i32 24, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
; CHECK: br label {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
; CHECK: {{[0-9]+:}}
; CHECK: store i32 42, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
; CHECK: br label {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
; CHECK: {{[0-9]+:}}
; CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = load i32, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
; CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = xor i32 {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, 42
; CHECK: store i32 {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
; CHECK: ret void
