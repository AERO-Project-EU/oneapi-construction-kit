; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a OpenCL -b 64 %p/op_opencl_half_divide_v2float.spv | %filecheck %s
                        OpCapability Kernel
                        OpCapability Addresses
                   %1 = OpExtInstImport "OpenCL.std"
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %half_divide_v2float "half_divide_v2float"
                        OpSource OpenCL_C 102000

; All types, variables and constants
              %void_t = OpTypeVoid
             %float_t = OpTypeFloat 32
           %v2float_t = OpTypeVector %float_t 2
    %half_divide_fn_t = OpTypeFunction %void_t
             %float_7 = OpConstant %float_t 7.0
            %float_22 = OpConstant %float_t 22.0
           %v2float_7 = OpConstantComposite %v2float_t %float_7 %float_7
          %v2float_22 = OpConstantComposite %v2float_t %float_22 %float_22

; All functions
 %half_divide_v2float = OpFunction %void_t None %half_divide_fn_t
; CHECK: define spir_kernel void @half_divide_v2float()
                   %2 = OpLabel
                   %3 = OpExtInst %v2float_t %1 half_divide %v2float_22 %v2float_7
; CHECK: {{%[a-zA-Z0-9]+}} = call spir_func <2 x float> @_Z11half_divideDv2_fS_(<2 x float> <float 2.200000e+01, float 2.200000e+01>, <2 x float> <float 7.000000e+00, float 7.000000e+00>)
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
