; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
; RUN: %spirv-ll -a Vulkan -c Float64 -c Int64 %p/op_spec_constant_composite_long_array.spv -o %t
; RUN: %filecheck < %t %t.pp
; CHECK: ; ModuleID = '{{.*}}'
                            OpCapability Shader
                            OpCapability Float64
                            OpCapability Int64
                       %1 = OpExtInstImport "GLSL.std.450"
                            OpMemoryModel Logical GLSL450
                            OpEntryPoint GLCompute %main "main"
                            OpExecutionMode %main LocalSize 1 1 1
                            OpSource GLSL 450
                            OpName %main "main"
                            OpName %test_block "test_block"
                            OpMemberName %test_block 0 "test_out"
                            OpName %_ ""
                            OpMemberDecorate %test_block 0 Offset 0
                            OpDecorate %test_block BufferBlock
                            OpDecorate %_ DescriptorSet 0
                            OpDecorate %_ Binding 0
                            OpDecorate %14 SpecId 0
                    %void = OpTypeVoid
                       %3 = OpTypeFunction %void
                    %long = OpTypeInt 64 1
                %idx_type = OpTypeInt 32 0
                       %8 = OpConstant %idx_type 4
                %arr_long = OpTypeArray %long %8
              %test_block = OpTypeStruct %arr_long
; CHECK: [[uniforms:%[a-zA-Z0-9_]+]] = type { [4 x i64] }
 %_ptr_Uniform_test_block = OpTypePointer Uniform %test_block
                       %_ = OpVariable %_ptr_Uniform_test_block Uniform
                      %13 = OpConstant %idx_type 0
                      %14 = OpSpecConstant %long -4200000000
                      %15 = OpSpecConstantComposite %arr_long %14 %14 %14 %14  ; testing this
            %ptr_arr_long = OpTypePointer Uniform %arr_long
                    %main = OpFunction %void None %3
; CHECK-GE15: define spir_kernel void @main(ptr addrspace(1){{( %0)?}}, ptr addrspace(1){{( %1)?}})
; CHECK-LT15: define spir_kernel void @main([[uniforms]] addrspace(1)*{{( %0)?}}, i32 addrspace(1)*{{( %1)?}})
                       %5 = OpLabel
                      %17 = OpAccessChain %ptr_arr_long %_ %13
; CHECK-GE15: [[uniformArrayPtr:%[0-9]+]] = getelementptr [[uniforms]], ptr addrspace(1) {{%[a-zA-Z0-9]+}}, i32 0, i32 0
; CHECK-LT15: [[uniformArrayPtr:%[0-9]+]] = getelementptr [[uniforms]], [[uniforms]] addrspace(1)* {{%[a-zA-Z0-9]+}}, i32 0, i32 0
                            OpStore %17 %15
; CHECK-GE15: store [4 x i64] [i64 -4200000000, i64 -4200000000, i64 -4200000000, i64 -4200000000], ptr addrspace(1) [[uniformArrayPtr]]
; CHECK-LT15: store [4 x i64] [i64 -4200000000, i64 -4200000000, i64 -4200000000, i64 -4200000000], [4 x i64] addrspace(1)* [[uniformArrayPtr]]
                            OpReturn
; CHECK: ret void
                            OpFunctionEnd
; CHECK: }
