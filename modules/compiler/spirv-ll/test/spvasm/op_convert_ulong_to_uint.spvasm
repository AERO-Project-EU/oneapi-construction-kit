; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a Vulkan -c Float64 -c Int64 %p/op_convert_ulong_to_uint.spv | %filecheck %s
            OpCapability Shader
            OpCapability Float64
            OpCapability Int64
       %1 = OpExtInstImport "GLSL.std.450"
            OpMemoryModel Logical GLSL450
            OpEntryPoint GLCompute %main "main"
            OpExecutionMode %main LocalSize 1 1 1
            OpSource GLSL 450
            OpName %main "main"
            OpName %a "a"
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
        %ulong = OpTypeInt 64 0
        %uint = OpTypeInt 32 0
    %ptr_ulong = OpTypePointer Function %ulong
    %ptr_uint = OpTypePointer Function %uint
          %9 = OpConstant %ulong 4200000000
       %main = OpFunction %void None %3
          %5 = OpLabel
          %a = OpVariable %ptr_ulong Function
          %b = OpVariable %ptr_uint Function
               OpStore %a %9
         %13 = OpLoad %ulong %a
         %14 = OpUConvert %uint %13 ; testing this
               OpStore %b %14
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: define spir_kernel void @main()
; CHECK: {{%.*}} = alloca i64
; CHECK: {{%.*}} = alloca i32
; CHECK: store i64 4200000000, {{(ptr|i64\*)}} {{%.*}}
; CHECK: {{%.*}} = load i64, {{(ptr|i64\*)}} {{%.*}}
; CHECK: {{%.*}} = trunc i64 %2 to i32
; CHECK: store i32 {{%.*}}, {{(ptr|i32\*)}} {{%.*}}
; CHECK: ret void
