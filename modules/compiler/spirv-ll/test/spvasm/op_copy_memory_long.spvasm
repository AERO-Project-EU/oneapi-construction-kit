; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a Vulkan -c Float64 -c Int64 %spv_file_s | %filecheck %s
; CHECK: ; ModuleID = '{{.*}}'
               OpCapability Shader
               OpCapability Float64
               OpCapability Int64
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main"
               OpExecutionMode %main LocalSize 1 1 1
               OpSource GLSL 450
               OpName %main "main"
               OpName %main "main"
               OpName %a "a"
               OpName %b "b"
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
       %long = OpTypeInt 64 1
   %ptr_long = OpTypePointer Function %long
         %14 = OpConstant %long -4200000000
       %main = OpFunction %void None %3
; CHECK: define spir_kernel void @main()
          %5 = OpLabel
          %a = OpVariable %ptr_long Function
; CHECK: %a = alloca i64
          %b = OpVariable %ptr_long Function
; CHECK: %b = alloca i64
               OpStore %a %14
; CHECK: store i64 -4200000000, ptr %a
               OpCopyMemory %b %a
; The alignment argument is no longer emitted in LLVM 7, so it's optional {{   below  }}
; The bitcasted alloca arguments are required strong alignment in LLVM 11, so included optional alignment string
; CHECK: call void @llvm.memcpy.p0.p0.i64(ptr{{( align [0-9])?}} %b, ptr{{( align [0-9])?}} %a, i64 8{{(, i32 0)?}}, i1 false)
               OpReturn
; CHECK: ret void
               OpFunctionEnd
; CHECK: }
