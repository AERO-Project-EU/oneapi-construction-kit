# Copyright (C) Codeplay Software Limited
#
# Licensed under the Apache License, Version 2.0 (the "License") with LLVM
# Exceptions; you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://github.com/uxlfoundation/oneapi-construction-kit/blob/main/LICENSE.txt
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

# Takes an input LLVM .ll file, removes unwanted metadata from it,
# and outputs an LLVM .ll file.

# We need to do this as a CMake/build step, rather than an LLVM pass because:
# - we can't edit LLVM/Clang
# - this transformation has to be done at build time
# - we'd have to use LLVM opt's plugin architecture to run a pass
# - Windows can't load passes this way
# - and we'd have to (for cross-compile builds) build the pass for host

if(NOT DEFINED INPUT_FILE)
  message(FATAL_ERROR "Required cmake variable INPUT_FILE not set!")
endif()

if(NOT DEFINED OUTPUT_FILE)
  message(FATAL_ERROR "Required cmake variable OUTPUT_FILE not set!")
endif()

if(NOT EXISTS ${INPUT_FILE})
  message(FATAL_ERROR "File '${INPUT_FILE}' does not exist!")
endif()

# read the input file
file(READ ${INPUT_FILE} data)

# replace the target triple
string(REGEX REPLACE "target triple = \"spir(64)?-unknown-unknown(_fp64)?(_fp16)?\"" "target triple = \"unknown-unknown-unknown\""  data "${data}")

# and finally output the result to a file
file(WRITE ${OUTPUT_FILE} "${data}")
