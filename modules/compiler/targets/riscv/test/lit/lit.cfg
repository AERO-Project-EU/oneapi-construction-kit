# Copyright (C) Codeplay Software Limited. All Rights Reserved.
"""Python configuration file for lit."""

import os
import lit.formats
import lit.util
import re

# Name of the test suite.
config.name = 'Codeplay'

# File extensions for testing.
config.suffixes = ['.cl', ".ll"]

# The test format used to interpret tests.
config.test_format = lit.formats.ShTest(execute_external=False)

# The root path where tests are located.
config.test_source_root = os.path.dirname(__file__)

# We might be running from an installed build dir
if not os.path.exists(config.test_exec_root):
    config.test_exec_root = config.test_source_root

for feature in config.ca_enable:
    config.available_features.add(feature)
if config.riscv_hal_name:
    config.available_features.add("riscv_hal_{0}".format(config.riscv_hal_name))
if config.riscv_device_name:
    config.substitutions.append(('%riscv_device', config.riscv_device_name))

# strip the RV and number part at the beginning
extensions = re.sub(r"^[rR][vV][0-9]+", "", config.riscv_isa_description).lower()

# We search for the 'v' extension in a rather naive way. A proper parser
# here would be better as some other extensions also have 'v' in the title
# However, since this is good enough for all our existing risc-v targets
# we will defer writing a full parser until then.
if "v" in extensions:
   config.substitutions.append(('%vattr', '+v'))
   config.available_features.add("riscv_rvv")
