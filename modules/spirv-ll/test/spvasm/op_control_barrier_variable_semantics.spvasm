; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a Vulkan %p/op_control_barrier_variable_semantics.spv | %filecheck %s
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main"
               OpExecutionMode %main LocalSize 1 1 1
               OpSource GLSL 450
               OpName %main "main"
       %void = OpTypeVoid
          %4 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
%_ptr_Function_uint = OpTypePointer Function %uint
     %uint_2 = OpConstant %uint 2
   %uint_272 = OpConstant %uint 272
       %main = OpFunction %void None %4
          %9 = OpLabel
         %10 = OpVariable %_ptr_Function_uint Function
               OpStore %10 %uint_272
         %11 = OpLoad %uint %10
               OpControlBarrier %uint_2 %uint_2 %11
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: define spir_kernel void @main()
; CHECK: [[SEMANTICS_VAR:%[a-zA-Z0-9_]+]] = alloca i32
; CHECK: store i32 272, {{(ptr|i32\*)}} [[SEMANTICS_VAR]]
; CHECK: [[SEMANTICS:%[a-zA-Z0-9_]+]] = load i32, {{(ptr|i32\*)}} [[SEMANTICS_VAR]]
; CHECK: call spir_func void @__mux_work_group_barrier(i32 0, i32 2, i32 [[SEMANTICS]])
