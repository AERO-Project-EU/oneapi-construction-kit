; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a OpenCL -b 64 %p/op_opencl_u_select_v8float.spv -o %t
; RUN: %filecheck < %t %s
                        OpCapability Kernel
                        OpCapability Addresses
                        OpCapability Vector16
                   %1 = OpExtInstImport "OpenCL.std"
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %select_v8float "select_v8float"
                        OpSource OpenCL_C 102000

; All types, variables and constants
              %void_t = OpTypeVoid
              %ui32_t = OpTypeInt 32 0
             %float_t = OpTypeFloat 32
            %v8ui32_t = OpTypeVector %ui32_t 8
           %v8float_t = OpTypeVector %float_t 8
         %select_fn_t = OpTypeFunction %void_t
             %float_1 = OpConstant %float_t 1.0
             %float_2 = OpConstant %float_t 2.0
              %ui32_3 = OpConstant %ui32_t 3
           %v8float_1 = OpConstantComposite %v8float_t %float_1 %float_1 %float_1 %float_1 %float_1 %float_1 %float_1 %float_1
           %v8float_2 = OpConstantComposite %v8float_t %float_2 %float_2 %float_2 %float_2 %float_2 %float_2 %float_2 %float_2
            %v8ui32_3 = OpConstantComposite %v8ui32_t %ui32_3 %ui32_3 %ui32_3 %ui32_3 %ui32_3 %ui32_3 %ui32_3 %ui32_3

; All functions
      %select_v8float = OpFunction %void_t None %select_fn_t
; CHECK: define spir_kernel void @select_v8float()
                   %2 = OpLabel
                   %3 = OpExtInst %v8float_t %1 select %v8float_1 %v8float_2 %v8ui32_3
; CHECK: {{%[a-zA-Z0-9]+}} = call spir_func <8 x float> @_Z6selectDv8_fS_Dv8_j(<8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <8 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>)
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
