; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
; RUN: %spirv-ll -a OpenCL -b 64 %p/op_opencl_modf_private_float.spv -o %t
; RUN: %filecheck < %t %t.pp
                        OpCapability Kernel
                        OpCapability Addresses
                   %1 = OpExtInstImport "OpenCL.std"
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %modf_float "modf_float"
                        OpSource OpenCL_C 102000

; All types, variables and constants
              %void_t = OpTypeVoid
             %float_t = OpTypeFloat 32
         %float_ptr_t = OpTypePointer Function %float_t
           %modf_fn_t = OpTypeFunction %void_t
             %float_1 = OpConstant %float_t 1.4

; All functions
          %modf_float = OpFunction %void_t None %modf_fn_t
; CHECK: define spir_kernel void @modf_float()
                   %2 = OpLabel
                   %3 = OpVariable %float_ptr_t Function
; CHECK: [[iptr:%[a-zA-Z0-9]+]] = alloca float
                   %4 = OpExtInst %float_t %1 modf %float_1 %3
; CHECK-GE15: {{%[a-zA-Z0-9]+}} = call spir_func float @_Z4modffPf(float 0x3FF6666660000000, ptr [[iptr]])
; CHECK-LT15: {{%[a-zA-Z0-9]+}} = call spir_func float @_Z4modffPf(float 0x3FF6666660000000, float* [[iptr]])
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
