; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
; RUN: %spirv-ll -a Vulkan -c Float64 -c Int64 %p/op_composite_insert_array.spv -o %t
; RUN: %filecheck < %t %t.pp
            OpCapability Shader
            OpCapability Float64
            OpCapability Int64
       %1 = OpExtInstImport "GLSL.std.450"
            OpMemoryModel Logical GLSL450
            OpEntryPoint GLCompute %main "main"
            OpExecutionMode %main LocalSize 1 1 1
            OpSource GLSL 450
            OpName %main "main"
            OpName %res "res"
       %void = OpTypeVoid
          %5 = OpTypeFunction %void
        %int = OpTypeInt 32 0
          %9 = OpConstant %int 3
        %array = OpTypeArray %int %9
    %ptr_array = OpTypePointer Function %array
         %10 = OpConstant %int 42
         %11 = OpConstantComposite %array %9 %9 %9
       %main = OpFunction %void None %5
         %12 = OpLabel
        %res = OpVariable %ptr_array Function
         %13 = OpCompositeInsert %array %10 %11 0
               OpStore %res %13
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: define spir_kernel void @main()
; CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = alloca [3 x i32]
; CHECK-GE15: store [3 x i32] {{\[(i32 [0-9]+(, )?)+\]}}, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
; CHECK-LT15: store [3 x i32] {{\[(i32 [0-9]+(, )?)+\]}}, [3 x i32]* {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
; CHECK: ret void
