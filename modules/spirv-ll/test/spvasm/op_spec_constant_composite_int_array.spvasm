; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
; RUN: %spirv-ll -a Vulkan -c Float64 -c Int64 %p/op_spec_constant_composite_int_array.spv -o %t
; RUN: %filecheck < %t %t.pp
            OpCapability Shader
            OpCapability Float64
            OpCapability Int64
       %1 = OpExtInstImport "GLSL.std.450"
            OpMemoryModel Logical GLSL450
            OpEntryPoint GLCompute %main "main"
            OpExecutionMode %main LocalSize 1 1 1
            OpSource GLSL 450
            OpName %main "main"
            OpName %test_block "test_block"
               OpMemberName %test_block 0 "test_out"
               OpName %_ ""
               OpMemberDecorate %test_block 0 Offset 0
               OpDecorate %test_block BufferBlock
               OpDecorate %_ DescriptorSet 0
               OpDecorate %_ Binding 0
               OpDecorate %14 SpecId 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
        %int = OpTypeInt 32 1
   %idx_type = OpTypeInt 32 0
          %8 = OpConstant %idx_type 4
    %arr_int = OpTypeArray %int %8
 %test_block = OpTypeStruct %arr_int
%_ptr_Uniform_test_block = OpTypePointer Uniform %test_block
          %_ = OpVariable %_ptr_Uniform_test_block Uniform
         %13 = OpConstant %idx_type 0
         %14 = OpSpecConstant %int -42
         %15 = OpSpecConstantComposite %arr_int %14 %14 %14 %14 ; testing this
%ptr_arr_int = OpTypePointer Uniform %arr_int
       %main = OpFunction %void None %3
          %5 = OpLabel
         %17 = OpAccessChain %ptr_arr_int %_ %13
               OpStore %17 %15
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = type { [4 x i32] }
; CHECK-GE15: define spir_kernel void @main(ptr addrspace(1){{( %0)?}}, ptr addrspace(1){{( %1)?}})
; CHECK-LT15: define spir_kernel void @main([[test_block:%[a-zA-Z0-9_]+]] addrspace(1)*{{( %0)?}}, i32 addrspace(1)*{{( %1)?}})
; CHECK-GE15: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = getelementptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, ptr addrspace(1) {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, i32 0, i32 0
; CHECK-LT15: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = getelementptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} addrspace(1)* {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, i32 0, i32 0
; CHECK-GE15: store [4 x i32] [i32 -42, i32 -42, i32 -42, i32 -42], ptr addrspace({{[0-9]}}) {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
; CHECK-LT15: store [4 x i32] [i32 -42, i32 -42, i32 -42, i32 -42], [4 x i32] addrspace({{[0-9]}})* {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
; CHECK: ret void
