; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
; RUN: %spirv-ll -a OpenCL -b 64 -c Float64 %p/op_lifetime_unsized.spv -o %t
; RUN: %filecheck < %t %t.pp
            OpCapability Kernel
            OpCapability Addresses
            OpCapability Float64
            OpCapability Int64
            OpMemoryModel Physical64 OpenCL
            OpEntryPoint Kernel %lifetime "lifetime"
            OpName %lifetime "lifetime"
            OpName %a "a"
    %void = OpTypeVoid
    %uint = OpTypeInt 32 0
%_ptr_Function_uint = OpTypePointer Function %uint
       %3 = OpTypeFunction %void
       %9 = OpConstant %uint 424
  %uint_1 = OpConstant %uint 1
  %uint_0 = OpConstant %uint 0
  %lifetime = OpFunction %void None %3
       %5 = OpLabel
       %a = OpVariable %_ptr_Function_uint Function
            OpStore %a %uint_0
            OpLifetimeStart %a 0
            OpStore %a %uint_1
            OpLifetimeStop %a 0
            OpStore %a %9
            OpReturn
            OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: define spir_kernel void @lifetime()
; CHECK: [[PTR:%[a-zA-Z0-9_]+]] = alloca i32
; CHECK-GE15: store i32 0, ptr [[PTR]]
; CHECK-LT15: store i32 0, i32* [[PTR]]
; CHECK-LT15: %1 = bitcast i32* [[PTR]] to i8*
; LLVM 4.0 doesn't need to add the address space as it assumes 0
; CHECK-GE15: call void @llvm.lifetime.start{{(.p0)?}}(i64 -1, ptr [[PTR]])
; CHECK-LT15: call void @llvm.lifetime.start{{(.p0i8)?}}(i64 -1, i8* %1)
; CHECK-GE15: store i32 1, ptr [[PTR]]
; CHECK-LT15: store i32 1, i32* [[PTR]]
; CHECK-LT15: %2 = bitcast i32* [[PTR]] to i8*
; CHECK-GE15: call void @llvm.lifetime.end{{(.p0)?}}(i64 -1, ptr [[PTR]])
; CHECK-LT15: call void @llvm.lifetime.end{{(.p0i8)?}}(i64 -1, i8* %2)
; CHECK-GE15: store i32 424, ptr [[PTR]]
; CHECK-LT15: store i32 424, i32* [[PTR]]
; CHECK: ret void
; CHECK-GE15: declare void @llvm.lifetime.start{{(.p0)?}}(i64{{.*}}, ptr nocapture)
; CHECK-LT15: declare void @llvm.lifetime.start{{(.p0i8)?}}(i64{{.*}}, i8* nocapture)
; CHECK-GE15: declare void @llvm.lifetime.end{{(.p0)?}}(i64{{.*}}, ptr nocapture)
; CHECK-LT15: declare void @llvm.lifetime.end{{(.p0i8)?}}(i64{{.*}}, i8* nocapture)
