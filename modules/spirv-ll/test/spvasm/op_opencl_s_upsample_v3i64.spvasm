; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %spirv-ll -a OpenCL -b 64 %p/op_opencl_s_upsample_v3i64.spv -o %t
; RUN: %filecheck < %t %s
                        OpCapability Kernel
                        OpCapability Addresses
                        OpCapability Int64
                   %1 = OpExtInstImport "OpenCL.std"
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %s_upsample_v3i64 "s_upsample_v3i64"
                        OpSource OpenCL_C 102000

; All types, variables and constants
              %void_t = OpTypeVoid
              %ui32_t = OpTypeInt 32 0
               %i64_t = OpTypeInt 64 0
            %v3ui32_t = OpTypeVector %ui32_t 3
             %v3i64_t = OpTypeVector %i64_t 3
     %s_upsample_fn_t = OpTypeFunction %void_t
               %i32_3 = OpConstant %ui32_t 3
              %ui32_4 = OpConstant %ui32_t 4
             %v3i32_3 = OpConstantComposite %v3ui32_t %i32_3 %i32_3 %i32_3
            %v3ui32_4 = OpConstantComposite %v3ui32_t %ui32_4 %ui32_4 %ui32_4

; All functions
    %s_upsample_v3i64 = OpFunction %void_t None %s_upsample_fn_t
; CHECK: define spir_kernel void @s_upsample_v3i64()
                   %2 = OpLabel
                   %3 = OpExtInst %v3i64_t %1 s_upsample %v3i32_3 %v3ui32_4
; CHECK: {{%[a-zA-Z0-9]+}} = call spir_func <3 x i64> @_Z8upsampleDv3_iS_(<3 x i32> <i32 3, i32 3, i32 3>, <3 x i32> <i32 4, i32 4, i32 4>)
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
