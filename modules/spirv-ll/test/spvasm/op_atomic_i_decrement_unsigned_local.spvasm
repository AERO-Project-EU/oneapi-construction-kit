; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
; RUN: %spirv-ll -a Vulkan %p/op_atomic_i_decrement_unsigned_local.spv -o %t
; RUN: %filecheck < %t %t.pp
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %1 "test"
       %uint = OpTypeInt 32 0
%_ptr_Workgroup_uint = OpTypePointer Workgroup %uint
       %void = OpTypeVoid
          %6 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
    %uint_80 = OpConstant %uint 80
          %2 = OpVariable %_ptr_Workgroup_uint Workgroup %uint_0
          %1 = OpFunction %void None %6
         %10 = OpLabel
         %11 = OpAtomicIDecrement %uint %2 %uint_1 %uint_80
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: @0 = internal addrspace(3) global i32 0
; CHECK: define spir_kernel void @test() {
; CHECK-GE15: {{%[a-zA-Z0-9_]+}} = call spir_func i32 @_Z10atomic_decPU3AS3Vj(ptr addrspace(3) @0)
; CHECK-LT15: {{%[a-zA-Z0-9_]+}} = call spir_func i32 @_Z10atomic_decPU3AS3Vj(i32 addrspace(3)* @0)
; CHECK: ret void
; CHECK-GE15: declare spir_func i32 @_Z10atomic_decPU3AS3Vj(ptr addrspace(3))
; CHECK-LT15: declare spir_func i32 @_Z10atomic_decPU3AS3Vj(i32 addrspace(3)*)
