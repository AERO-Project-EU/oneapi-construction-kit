; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
; RUN: %spirv-ll -a Vulkan -c Float64 -c Int64 %p/op_spec_constant_op_fmod_float.spv -o %t
; RUN: %filecheck < %t %t.pp
             OpCapability Shader
             OpCapability Float64
             OpCapability Int64
        %1 = OpExtInstImport "GLSL.std.450"
             OpMemoryModel Logical GLSL450
             OpEntryPoint GLCompute %main "main"
             OpExecutionMode %main LocalSize 1 1 1
             OpSource GLSL 450
             OpName %main "main"
             OpName %res "res"
             OpName %test "test"
             OpName %const "const"
             OpDecorate %test SpecId 0
     %void = OpTypeVoid
        %3 = OpTypeFunction %void
    %float = OpTypeFloat 32
%ptr_float = OpTypePointer Function %float
     %test = OpSpecConstant %float 42.42
    %const = OpConstant %float 42.42
       %11 = OpSpecConstantOp %float FMod %test %const
     %main = OpFunction %void None %3
        %5 = OpLabel
      %res = OpVariable %ptr_float Function
             OpStore %res %11
             OpReturn
             OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: define spir_kernel void @main()
; CHECK: init_spec_constants:
; CHECK: [[MOD:%[a-zA-Z0-9_]+]] = call spir_func float @_Z4fmodff(float 0x404535C280000000, float 0x404535C280000000)
; CHECK: [[CONST:%[a-zA-Z0-9_]+]] = call spir_func float @_Z8copysignff(float [[MOD]], float 0x404535C280000000)
; CHECK: br label {{%[a-zA-Z0-9_]+}}
; CHECK: [[RES:%[a-zA-Z0-9_]+]] = alloca float
; CHECK-GE15: store float [[CONST]], ptr [[RES]]
; CHECK-LT15: store float [[CONST]], float* [[RES]]
; CHECK: ret void
; CHECK: declare spir_func float @_Z4fmodff(float, float)
; CHECK: declare spir_func float @_Z8copysignff(float, float)
