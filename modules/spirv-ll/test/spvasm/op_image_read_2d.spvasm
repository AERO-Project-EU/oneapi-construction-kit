; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
; RUN: %spirv-ll -a OpenCL -b 64 -c Sampled1D -c StorageImageReadWithoutFormat %p/op_image_read_2d.spv -o %t
; RUN: %filecheck < %t %t.pp
                OpCapability Kernel
                OpCapability Addresses
                OpCapability Sampled1D
                OpCapability StorageImageReadWithoutFormat
                OpMemoryModel Physical64 OpenCL
                OpEntryPoint Kernel %image2d "image2d"
                OpSource OpenCL_C 102000
                OpName %image "image"
      %void_t = OpTypeVoid
      %uint_t = OpTypeInt 32 0
     %float_t = OpTypeFloat 32
      %int2_t = OpTypeVector %uint_t 2
     %uint4_t = OpTypeVector %uint_t 4
    %float4_t = OpTypeVector %float_t 4
%image2d_t = OpTypeImage %void_t 2D 0 0 0 0 Unknown ReadOnly
; CHECK-LT15: %opencl.image2d_t = type opaque
       %foo_t = OpTypeFunction %void_t %image2d_t
       %int_1 = OpConstant %uint_t 1
      %int2_1 = OpConstantComposite %int2_t %int_1 %int_1
     %image2d = OpFunction %void_t None %foo_t
       %image = OpFunctionParameter %image2d_t
; CHECK-GE15: define spir_kernel void @image2d(ptr addrspace(1) %image)
; CHECK-LT15: define spir_kernel void @image2d(%opencl.image2d_t addrspace(1)* %image)
           %1 = OpLabel
           %3 = OpImageRead %uint4_t %image %int2_1
; CHECK-GE15: {{%[a-zA-Z0-9]+}} = call spir_func <4 x i32> @_Z12read_imageui11ocl_image2dDv2_i(ptr addrspace(1) %image, <2 x i32> <i32 1, i32 1>)
; CHECK-LT15: {{%[a-zA-Z0-9]+}} = call spir_func <4 x i32> @_Z12read_imageui11ocl_image2dDv2_i(%opencl.image2d_t addrspace(1)* %image, <2 x i32> <i32 1, i32 1>)
           %4 = OpImageRead %float4_t %image %int2_1
; CHECK-GE15: {{%[a-zA-Z0-9]+}} = call spir_func <4 x float> @_Z11read_imagef11ocl_image2dDv2_i(ptr addrspace(1) %image, <2 x i32> <i32 1, i32 1>)
; CHECK-LT15: {{%[a-zA-Z0-9]+}} = call spir_func <4 x float> @_Z11read_imagef11ocl_image2dDv2_i(%opencl.image2d_t addrspace(1)* %image, <2 x i32> <i32 1, i32 1>)
                OpReturn
; CHECK: ret void
                OpFunctionEnd
; CHECK: }
