; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
; RUN: %spirv-ll -a Vulkan %p/op_memory_barrier_variable_semantics.spv | %filecheck %t.pp
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main"
               OpExecutionMode %main LocalSize 1 1 1
               OpSource GLSL 450
               OpName %main "main"
               OpDecorate %uniform_semantics DescriptorSet 0
               OpDecorate %uniform_semantics Binding 0
       %void = OpTypeVoid
          %4 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
%ptr_uniform_uint = OpTypePointer Uniform %uint
     %uint_2 = OpConstant %uint 2
%uniform_semantics = OpVariable %ptr_uniform_uint Uniform 
       %main = OpFunction %void None %4
          %8 = OpLabel
          %9 = OpLoad %uint %uniform_semantics
               OpMemoryBarrier %uint_2 %9
               OpReturn
               OpFunctionEnd
; CHECK-GE15: define spir_kernel void @main(ptr addrspace(1){{( %0)?}}, ptr addrspace(1){{( %1)?}})
; CHECK-LT15: define spir_kernel void @main(i32 addrspace(1)*{{( %0)?}}, i32 addrspace(1)*{{( %1)?}})
; CHECK-GE15: [[SEMANTICS:%[a-zA-Z0-9]+]] = load i32, ptr addrspace(1) {{%[a-zA-Z0-9_]+}}
; CHECK-LT15: [[SEMANTICS:%[a-zA-Z0-9]+]] = load i32, i32 addrspace(1)* {{%[a-zA-Z0-9_]+}}
; CHECK: call spir_func void @__mux_mem_barrier(i32 2, i32 [[SEMANTICS]])
