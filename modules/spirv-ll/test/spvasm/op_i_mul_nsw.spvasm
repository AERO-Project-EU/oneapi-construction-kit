; Copyright (C) Codeplay Software Limited. All Rights Reserved.

; RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
; RUN: %spirv-ll -a Vulkan -e SPV_KHR_no_integer_wrap_decoration %p/op_i_mul_nsw.spv -o %t
; RUN: %filecheck < %t %t.pp
               OpCapability Shader
               OpExtension "SPV_KHR_no_integer_wrap_decoration"
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main"
               OpExecutionMode %main LocalSize 1 1 1
               OpSource GLSL 450
               OpSourceExtension "GL_GOOGLE_cpp_style_line_directive"
               OpSourceExtension "GL_GOOGLE_include_directive"
               OpName %main "main"
               OpName %a "a"
               OpName %b "b"
               OpDecorate %20 NoSignedWrap
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
        %int = OpTypeInt 32 1
        %Foo = OpTypeStruct %int %int
    %ptr_int = OpTypePointer Function %int
         %14 = OpConstant %int 42
         %16 = OpConstant %int 42
       %main = OpFunction %void None %3
          %5 = OpLabel
          %a = OpVariable %ptr_int Function
          %b = OpVariable %ptr_int Function
               OpStore %a %14
               OpStore %b %16
         %18 = OpLoad %int %a
         %19 = OpLoad %int %b
         %20 = OpIMul %int %18 %19 ;testing this
               OpStore %a %20
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: define spir_kernel void @main()
; CHECK: [[A:%[a-zA-Z0-9_]+]] = alloca i32
; CHECK: [[B:%[a-zA-Z0-9_]+]] = alloca i32
; CHECK-GE15: store i32 42, ptr [[A]]
; CHECK-LT15: store i32 42, i32* [[A]]
; CHECK-GE15: store i32 42, ptr [[B]]
; CHECK-LT15: store i32 42, i32* [[B]]
; CHECK-GE15: [[AVAL:%[a-zA-Z0-9_]+]] = load i32, ptr [[A]]
; CHECK-LT15: [[AVAL:%[a-zA-Z0-9_]+]] = load i32, i32* [[A]]
; CHECK-GE15: [[BVAL:%[a-zA-Z0-9_]+]] = load i32, ptr [[B]]
; CHECK-LT15: [[BVAL:%[a-zA-Z0-9_]+]] = load i32, i32* [[B]]
; CHECK: [[RES:%[a-zA-Z0-9_]+]] = mul nsw i32 [[AVAL]], [[BVAL]]
; CHECK-GE15: store i32 [[RES]], ptr [[A]]
; CHECK-LT15: store i32 [[RES]], i32* [[A]]
; CHECK: ret void
