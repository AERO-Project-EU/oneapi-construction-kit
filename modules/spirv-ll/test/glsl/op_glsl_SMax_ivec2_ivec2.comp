// Copyright (C) Codeplay Software Limited. All Rights Reserved.

// RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
// RUN: %spirv-ll -a Vulkan %p/op_glsl_SMax_ivec2_ivec2.spv -o %t
// RUN: %filecheck < %t %t.pp

#version 450

layout (std430, set=0, binding=0) buffer inA {
  ivec2 arg0;
  ivec2 arg1;
};

layout (std430, set=0, binding=1) buffer outR {
  ivec2 res;
};

void main() {
  res = max(arg0,arg1);
}

// CHECK: ; ModuleID = '{{.*}}'
// CHECK-GE15: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = load <2 x i32>, ptr addrspace({{[0-9]}}) {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK-LT15: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = load <2 x i32>, <2 x i32> addrspace({{[0-9]}})* {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK-GE15: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = load <2 x i32>, ptr addrspace({{[0-9]}}) {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK-LT15: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = load <2 x i32>, <2 x i32> addrspace({{[0-9]}})* {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = call spir_func <2 x i32> @_Z3maxDv2_iS_(<2 x i32> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, <2 x i32> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}})
// CHECK-GE15: store <2 x i32> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, ptr addrspace({{[0-9]}}) {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK-LT15: store <2 x i32> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, <2 x i32> addrspace({{[0-9]}})* {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: ret void
// CHECK: declare spir_func <2 x i32> @_Z3maxDv2_iS_(<2 x i32>, <2 x i32>)
