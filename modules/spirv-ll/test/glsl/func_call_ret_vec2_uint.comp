// Copyright (C) Codeplay Software Limited. All Rights Reserved.

// RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
// RUN: %spirv-ll -a Vulkan %p/func_call_ret_vec2_uint.spv -o %t
// RUN: %filecheck < %t %t.pp

#version 450

uvec2 func_call_ret_vec2_uint() {
  uvec2 a = uvec2(42, 42);
  return a;
}

void main() {
  uvec2 a = func_call_ret_vec2_uint();
}

// CHECK: ; ModuleID = '{{.*}}'
// CHECK: define spir_kernel void @main() {
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = alloca <2 x i32>
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = call spir_func <2 x i32> @{{("func_call_ret_vec2_uint.+")}}()
// CHECK-GE15: store <2 x i32> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK-LT15: store <2 x i32> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, <2 x i32>* {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: ret void
// CHECK: define private spir_func <2 x i32> @{{("func_call_ret_vec2_uint.+")}}()
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = alloca <2 x i32>
// CHECK-GE15: store <2 x i32> <i32 42, i32 42>, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK-LT15: store <2 x i32> <i32 42, i32 42>, <2 x i32>* {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK-GE15: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = load <2 x i32>, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK-LT15: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = load <2 x i32>, <2 x i32>* {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: ret <2 x i32> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
