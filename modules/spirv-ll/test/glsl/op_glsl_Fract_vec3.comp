// Copyright (C) Codeplay Software Limited. All Rights Reserved.

// RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
// RUN: %spirv-ll -a Vulkan %p/op_glsl_Fract_vec3.spv -o %t
// RUN: %filecheck < %t %t.pp

#version 450

layout (std430, set=0, binding=0) buffer inA {
  vec3 arg0;
};

layout (std430, set=0, binding=1) buffer outR {
  vec3 res;
};

void main() {
  res = fract(arg0);
}

// CHECK: ; ModuleID = '{{.*}}'
// CHECK-GE15: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = load <3 x float>, ptr addrspace({{[0-9]}}) {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK-LT15: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = load <3 x float>, <3 x float> addrspace({{[0-9]}})* {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = alloca <3 x float>
// CHECK-GE15: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = call spir_func <3 x float> @_Z5fractDv3_fPS_(<3 x float> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, ptr {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}})
// CHECK-LT15: {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}} = call spir_func <3 x float> @_Z5fractDv3_fPS_(<3 x float> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, <3 x float>* {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}})
// CHECK-GE15: store <3 x float> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, ptr addrspace({{[0-9]}}) {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK-LT15: store <3 x float> {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}, <3 x float> addrspace({{[0-9]}})* {{[%@][-a-zA-Z$._0-9][-a-zA-Z$._0-9]*}}
// CHECK: ret void
// CHECK-GE15: declare spir_func <3 x float> @_Z5fractDv3_fPS_(<3 x float>, ptr)
// CHECK-LT15: declare spir_func <3 x float> @_Z5fractDv3_fPS_(<3 x float>, <3 x float>*)
