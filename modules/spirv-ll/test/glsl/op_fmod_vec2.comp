// Copyright (C) Codeplay Software Limited. All Rights Reserved.

// REQUIRES: WorkingFrem
// RUN: %pp-llvm-ver -o %t.pp < %s --llvm-ver %LLVMVER
// RUN: %spirv-ll -a Vulkan %p/op_fmod_vec2.spv -o %t
// RUN: %filecheck < %t %t.pp

// CHECK: ; ModuleID = '{{.*}}'
#version 450

void main() {
// CHECK: define spir_kernel void @main() {
// CHECK:  {{%[a-zA-Z0-9_]+}} = alloca <2 x float>
// CHECK:  {{%[a-zA-Z0-9_]+}} = alloca <2 x float>
// CHECK:  {{%[a-zA-Z0-9_]+}} = alloca <2 x float>
  vec2 x = vec2(42.42, 42.42);
// CHECK-GE15:  store <2 x float> <float 0x404535C280000000, float 0x404535C280000000>, ptr {{%[a-zA-Z0-9_]+}}
// CHECK-LT15:  store <2 x float> <float 0x404535C280000000, float 0x404535C280000000>, <2 x float>* {{%[a-zA-Z0-9_]+}}
  vec2 y = vec2(42.42, 42.42);
// CHECK-GE15:  store <2 x float> <float 0x404535C280000000, float 0x404535C280000000>, ptr {{%[a-zA-Z0-9_]+}}
// CHECK-LT15:  store <2 x float> <float 0x404535C280000000, float 0x404535C280000000>, <2 x float>* {{%[a-zA-Z0-9_]+}}
// CHECK-GE15:  [[X:%[a-zA-Z0-9_]+]] = load <2 x float>, ptr {{%[a-zA-Z0-9_]+}}
// CHECK-LT15:  [[X:%[a-zA-Z0-9_]+]] = load <2 x float>, <2 x float>* {{%[a-zA-Z0-9_]+}}
// CHECK-GE15:  [[Y:%[a-zA-Z0-9_]+]] = load <2 x float>, ptr {{%[a-zA-Z0-9_]+}}
// CHECK-LT15:  [[Y:%[a-zA-Z0-9_]+]] = load <2 x float>, <2 x float>* {{%[a-zA-Z0-9_]+}}
  vec2 res = mod(x, y);
// CHECK:  [[MOD:%[a-zA-Z0-9_]+]] = call spir_func <2 x float> @_Z4fmodDv2_fS_(<2 x float> [[X]], <2 x float> [[Y]])
// CHECK:  [[RES:%[a-zA-Z0-9_]+]] = call spir_func <2 x float> @_Z8copysignDv2_fS_(<2 x float> [[MOD]], <2 x float> [[Y]])
// CHECK-GE15:  store <2 x float> [[RES]], ptr {{%[a-zA-Z0-9_]+}}
// CHECK-LT15:  store <2 x float> [[RES]], <2 x float>* {{%[a-zA-Z0-9_]+}}
// CHECK:  ret void
}

// CHECK: declare spir_func <2 x float> @_Z8copysignDv2_fS_(<2 x float>, <2 x float>)
