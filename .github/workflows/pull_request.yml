name: Pull Request
on:
  workflow_dispatch:
  pull_request:
    paths:
    - source/**
    - clik/**
    - modules/**
    - examples/**
    - cmake/**
    - hal/**
    - .github/actions/do_build_ock/**
    - .github/actions/setup_build/**
    - .github/workflows/pull_request.yml
    - CMakeLists.txt
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:

############### JOB   mr-ubuntu-gcc-x86_64-riscv-fp16-cl3-0-unitcl_vecz:

  mr-ubuntu-gcc-x86_64-riscv-fp16-cl3-0-unitcl_vecz:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4.1.0
    - name: setup-ubuntu
      uses: ./.github/actions/setup_build
      with:
        llvm_version: '18'
        llvm_build_type: RelAssert
        os: ubuntu
    - run: echo WORKSPACE is $GITHUB_WORKSPACE && echo PWD is `pwd` && ls -al
    - name: build ock
      uses: ./.github/actions/do_build_ock
      with:
        build_targets: check-ock-UnitCL-group-vecz
        mux_targets_enable: riscv
        mux_compilers_enable: riscv
        riscv_enabled: ON
        enable_rvv_scalable_vecz_check: ON
        enable_rvv_scalable_vp_vecz_check: ON
        use_linker: gold
        hal_description: RV64GCV_Zfh
        hal_refsi_soc: G1
        hal_refsi_thread_mode: WG
        debug_support: ON

############### JOB  mr-windows-msvc-x86_64-llvm-latest-cl3-0-offline

  mr-windows-msvc-x86_64-llvm-latest-cl3-0-offline:
    runs-on: windows-2019
    steps:

      - name: Setup Windows llvm base
        uses: llvm/actions/setup-windows@main
        with:
          arch: amd64

      - name: Checkout repo
        uses: actions/checkout@v4.1.0

      # installs tools, ninja, installs llvm and sets up sccahe
      - name: setup-windows
        uses:  ./.github/actions/setup_build
        with:
          llvm_version: 19
          llvm_build_type: RelAssert
          os: windows

      - name: build ock x86_64 relassert
        uses: ./.github/actions/do_build_ock
        with:
          build_targets: check-ock
          enable_api: ""
          builtin_kernel: ON
          shell_to_use: pwsh
          gtest_launcher: "python3;-u;${{ github.workspace }}/scripts/gtest-terse-runner.py"
          debug_support: ON
          c_compiler: 'cl.exe'
          cxx_compiler: 'cl.exe'

      - name: build ock x86_64 offline
        uses: ./.github/actions/do_build_ock
        with:
          build_targets: check-ock
          runtime_compiler_enabled: OFF
          external_clc: "${{ github.workspace }}/build/bin/clc.exe"
          shell_to_use: pwsh
          gtest_launcher: "python3;-u;${{ github.workspace }}/scripts/gtest-terse-runner.py"
          debug_support: ON
          install_dir: ${{ github.workspace }}/install_offline
          build_dir: ${{ github.workspace }}/build_offline
          c_compiler: 'cl.exe'
          cxx_compiler: 'cl.exe'
